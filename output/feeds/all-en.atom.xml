<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog</title><link href="/" rel="alternate"></link><link href="/feeds/all-en.atom.xml" rel="self"></link><id>/</id><updated>2018-02-14T00:00:00+00:00</updated><entry><title>My SQL setup</title><link href="/my-sql-setup.html" rel="alternate"></link><published>2018-02-14T00:00:00+00:00</published><updated>2018-02-14T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2018-02-14:/my-sql-setup.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Install MySQL via homebrew&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install mysql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Data will be stored by default at &lt;code&gt;/usr/local/var/mysql&lt;/code&gt;. You can confirm this as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&amp;gt;mysql.server start
$&amp;gt;mysql -u root
mysql&amp;gt; select @@datadir;
+-----------------------+
| @@datadir             |
+-----------------------+
| /usr/local/var/mysql/ |
+-----------------------+
1 row in set (0.00 sec)
$&amp;gt;mysql.server stop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Moving the …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Install MySQL via homebrew&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install mysql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Data will be stored by default at &lt;code&gt;/usr/local/var/mysql&lt;/code&gt;. You can confirm this as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&amp;gt;mysql.server start
$&amp;gt;mysql -u root
mysql&amp;gt; select @@datadir;
+-----------------------+
| @@datadir             |
+-----------------------+
| /usr/local/var/mysql/ |
+-----------------------+
1 row in set (0.00 sec)
$&amp;gt;mysql.server stop
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Moving the data directory means editing the &lt;code&gt;my.cnf&lt;/code&gt; file at &lt;code&gt;my.cnf&lt;/code&gt; which can exist in multiple locations. See below ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$&amp;gt;my_print_defaults --help
...
Default options are read from the following files in the given order:
/etc/my.cnf /etc/mysql/my.cnf /usr/local/etc/my.cnf ~/.my.cnf
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I edited &lt;code&gt;/usr/local/etc/my.cnf&lt;/code&gt;. This worked and didn't require root privileges. Make sure the server has been stopped before you do this.&lt;/p&gt;
&lt;p&gt;My data directory is at `/volumes/safe/sql' and my file currently looks like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[mysqld]&lt;/span&gt;
&lt;span class="c1"&gt;# Default Homebrew MySQL server config&lt;/span&gt;
&lt;span class="c1"&gt;# Only allow connections from localhost&lt;/span&gt;
&lt;span class="na"&gt;bind-address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;127.0.0.1&lt;/span&gt;

&lt;span class="na"&gt;datadir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;/volumes/safe/sql&lt;/span&gt;

&lt;span class="k"&gt;[client]&lt;/span&gt;
&lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;3306&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Connecting to MySQL from R (without ODBC)&lt;/h2&gt;
&lt;p&gt;See https://github.com/r-dbi/RMariaDB&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;install.packages(&amp;#39;RMariaDB&amp;#39;, repos=&amp;quot;https://cloud.r-project.org&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install mysql-connector-c from Homebrew; this was tricky and I had to &lt;code&gt;brew unlink mysql&lt;/code&gt; before it would work, and then &lt;code&gt;brew link mysql --overwrite&lt;/code&gt; afterwards. Still not sure if this broke things&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;brew install mysql-connector-c
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then edit &lt;code&gt;/usr/local/etc/my.cnf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[spotlight]&lt;/span&gt;
&lt;span class="na"&gt;database&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;spotlight&lt;/span&gt;
&lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;steve&lt;/span&gt;
&lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Useful links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-change-a-mysql-data-directory-to-a-new-location-on-centos-7"&gt;How to Change a MySQL Data Directory to a New Location on CentOS 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/7973927/for-homebrew-mysql-installs-wheres-my-cnf"&gt;For homebrew mysql installs, where's my.cnf?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="[howto"></category><category term="tips"></category><category term="methods"></category><category term="sweetsetup]"></category></entry><entry><title>A brief review of causal infererence</title><link href="/a-brief-review-of-causal-infererence.html" rel="alternate"></link><published>2018-01-12T00:00:00+00:00</published><updated>2018-01-12T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2018-01-12:/a-brief-review-of-causal-infererence.html</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;We wish to improve the health of others. For this we need to understand which levers are genuinely connected to better health outcomes. For the medical researcher, there are two threats: spurious correlations and systematic bias. Statistics provides the tools to handle the former.&lt;/p&gt;
&lt;p&gt;Using the language of probability …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;We wish to improve the health of others. For this we need to understand which levers are genuinely connected to better health outcomes. For the medical researcher, there are two threats: spurious correlations and systematic bias. Statistics provides the tools to handle the former.&lt;/p&gt;
&lt;p&gt;Using the language of probability, they allow us to distinguish signal from noise. Examining births in London between 1664 and 1757, and finding 737,629 male and 698,958 females (an excess of 38,671 male births), we could conclude that something is amiss. &lt;a href=""&gt;^1&lt;/a&gt;  However, scale this back ten thousand fold, and observing 74 male and 70 female births, we might have little to say. The probability of the former occurring by chance is 1.08e-228, while the latter is 0.40 (40%).&lt;a href=""&gt;^2&lt;/a&gt; These probabilities are numerical estimates of plausibility, and the machinery to calculate them developed from investigating games of chance in the 18th century. From this follows classical statistical hypothesis testing, and modern Bayesian techniques, and machine learning.
Statistics however has no tools to handle systematic bias. More specifically, we can be confident that people carrying cigarette lighters will more have higher rates of lung cancer, but we do not know whether banning cigarette lighters will save lives. Not only does association not imply causation, but it provides no insight into the direction of causality. The association would be identical whether the lung cancer creates a craving for cigarettes, or cigarettes cause lung cancer. The language of statistics is mathematics, and mathematical equations are equivalent whether written forwards or backwards.
The solution to this problem has been experimental design where the physical process allows us to distinguish cause from effect. Just as we are warned that 'association is not causation', there is a complementary truism that, there is 'no causation without manipulation'. &lt;a href=""&gt;@Holland1986&lt;/a&gt; 
The grammar for causality abandons algebra and probability for a theory of graphs. The field of graphical models has been developed by Judea Pearl, and won him the Turing Prize (the 'Nobel prize of computing') in 2011. The graph invites us first to add cigarettes as a common cause of carrying lighters and lung cancer. It provides tools to decide whether we can be confident that the observed relationship is free from systematic bias or not. Finally, it offers guidance on the measurements we need to make to determine whether the flow of causality is from the cigarette or the lighter. 
The joy of this visual approach is its accessibility although there has been, as yet, little penetration of these methods into the clinical literature. &lt;a href=""&gt;@Elwert2013a&lt;/a&gt;
This review will introduce this language through a worked example developed from a study of long term survival following major surgery. &lt;a href=""&gt;@Khuri2005a&lt;/a&gt; We will then use this new tool to compare causal and non-causal methodologies available to the clinical researcher. This will provide a framework for the clinical researcher to understand modern observational techniques including propensity score models, instrumental variable analyses, regression discontinuity designs, and interrupted time-series analyses.&lt;/p&gt;
&lt;h2&gt;Worked example: long term survival following major surgery&lt;/h2&gt;
&lt;p&gt;Khuri and colleagues published in 2005 a report from the Veterans Affairs hospitals in the USA that examined the relationship between post-operative complications and long term survival.&lt;a href=""&gt;@Khuri2005a&lt;/a&gt; This was an observational study &lt;em&gt;not&lt;/em&gt; a randomised controlled trial. Measures of pre-operative risk, surgical severity and post-operative complications were combined with long term outcome data. &lt;em&gt;Post&lt;/em&gt;-operative complications were seen as a proxy for poor &lt;em&gt;peri&lt;/em&gt;-operative care, and the authors wished to quantify the importance of this period of care. For expository purposes, we will only consider a small subset of the measurements used. We will also consider a thought experiment where we randomise patients to a higher level of care in the Intensive Care Unit (ICU) following surgery either experimentally, or via the effect of ICU bed strain that in turn affects access to ICU care.&lt;/p&gt;
&lt;h2&gt;Graphical models: the syntax of a model&lt;/h2&gt;
&lt;p&gt;Before we sketch the graphical model of this study, we need to introduce the vocabulary. Graphs are composed of nodes (variables), and arrows (edges). The arrow indicates a &lt;em&gt;possible&lt;/em&gt; causal effect between two variables. Downstream variables (at the head of the arrow) are often called children; upstream variables (at the tail) are ancestors. The direct ancestors are the 'parents' of a variable.
The &lt;em&gt;absence&lt;/em&gt; of an arrow is a statement of a &lt;em&gt;strong&lt;/em&gt; assumption that there is &lt;em&gt;no&lt;/em&gt; causal effect.&lt;a href=""&gt;@Elwert2013a&lt;/a&gt; Conversely, the presence of an arrow does &lt;em&gt;not&lt;/em&gt; mandate that the parent is a cause of the child; the causal effect may be zero. Therefore, where we cannot assume there is no causal relation, we must include an arrow.
A &lt;em&gt;path&lt;/em&gt; is a sequence of arrows. For causality to be possible, a path cannot be circular (egg $\rightarrow$ chicken$\rightarrow$ egg); each node on a path can only be visited once. Where this is true, then the model may be called a &lt;em&gt;Directed Acyclic Graph (DAG)&lt;/em&gt;. Because of the assumption that the absence of an arrow implies the absence of an effect, then a &lt;em&gt;Causal DAG&lt;/em&gt; is a statement of everything that is known about a particular process.&lt;br&gt;
That completes the formal definition of the components of a graphical model. However, you will often see additional colouring and shading which is used to aid discussion. Nodes are often drawn as squares to indicate that a variable is observed, or as circles where the variable is unobserved or unmeasured. In our worked example, we highlight the exposure (peri-operative care) in green, and the outcome (mortality) in blue. We use a green arrow to highlight the causal relationship we are trying to estimate (the effect of peri-operative care on long term outcomes). Finally, we use red to highlight paths that create non-causal (biasing) connections between the exposure and the outcome.  &lt;/p&gt;
&lt;h2&gt;The use of graphical models&lt;/h2&gt;
&lt;p&gt;Each model starts with the two nodes, the exposure and the outcome, linked by one edge: the causal relationship of interest. Remember that the arrow is only indicating a &lt;em&gt;possible&lt;/em&gt; effect; this may be zero in the final analysis. We then add all other &lt;em&gt;possible&lt;/em&gt; relationships to the graph. A series of remarkably simple rules (theorems) then allow us to decide if we can &lt;em&gt;identify&lt;/em&gt; the causal relationship. This is only possible if we can eliminate all non-causal paths between the exposure and the outcome. This means finding a set of measures that &lt;em&gt;controls&lt;/em&gt; for confounding without introducing selection bias through a &lt;em&gt;collider&lt;/em&gt;.&lt;br&gt;
We will now expand our model of peri-operative care and mortality to illustrate this process.&lt;/p&gt;
&lt;h3&gt;Confounding and backdoor paths&lt;/h3&gt;
&lt;p&gt;Two variables may be associated where they share a common &lt;em&gt;cause&lt;/em&gt;. For example, smoking is a common cause (&lt;em&gt;confounder&lt;/em&gt;) for carrying cigarette lighters and for lung cancer so there is a &lt;em&gt;biasing&lt;/em&gt;  or &lt;em&gt;backdoor&lt;/em&gt; path from cigarette lighters to lung cancer (${cigarette\ lighters}\leftarrow{smoking}\rightarrow{lung\ cancer}$ ). We must &lt;em&gt;control&lt;/em&gt; for smoking to get at the true causal effect of lighters on lung cancer.
In our example (Figure 2a), ICU might be used more often for the elderly, and the mortality would also be higher for the elderly so we have a red biasing path from peri-operative care back through age to mortality. If we 'control' for age (indicated by shading the square grey in Figure 2(a)ii), then we 'block' the backdoor path. If the graph is complete (a causal DAG), then controlling for age is sufficient to identify the true effect of peri-operative care on mortality. Where important variables are unmeasured (e.g. frailty in Figure 2b), then confounding will persist.  &lt;/p&gt;
&lt;h3&gt;Selection and colliders&lt;/h3&gt;
&lt;p&gt;Confounding and backdoor paths create the temptation to include &lt;em&gt;all&lt;/em&gt; potentially related variables as controls. However, this strategy risks creating a bias. This subtle problem is also called Berkson's paradox of which the Monty-Hall problem is a notorious example.&lt;a href=""&gt;^3&lt;/a&gt; 
Consider investigating the relationship between smoking, asbestos exposure and lung cancer, but only studying patients with a diagnosis of lung cancer. Selecting the study population is just another form of control. For a patients to have lung cancer without asbestos exposure, we would expect heavier smoking histories. Conversely, for patients to have lung cancer without smoking, we would expect greater asbestos exposure. Within this selected population, we will therefore find an inverse relationship between lung cancer and smoking. We say that lung cancer is a &lt;em&gt;collider&lt;/em&gt; on the path between smoking and asbestos (${smoking}\rightarrow{lung\ cancer}\leftarrow{asbestos\ exposure}$ ) because two arrows collide onto the same variable.
In our example (Figure 2c), we might have measures of Acute Kidney Injury (AKI) in the ICU and be tempted to use this as a control. However, AKI is likely partly genetically determined as well as related to standards of peri-operative care. &lt;em&gt;Controlling&lt;/em&gt; for AKI creates a collider from which a biasing path now connects peri-operative care and mortality. Similarly, by making AKI status part of the inclusion criteria (another form of control) we would also open the same biasing path. &lt;/p&gt;
&lt;h2&gt;Causal estimation of treatment effects&lt;/h2&gt;
&lt;p&gt;These rules allow us to inspect a graphical model and decide whether the relationship between two variables is free from systematic bias. Where we can block all backdoor paths without inducing false associations by conditioning on a collider, the relationship is said to be &lt;em&gt;identifiable&lt;/em&gt;. We can very simply map the study design to the graphical model to decide if we have achieved that aim.&lt;/p&gt;
&lt;h3&gt;Experimental randomisation&lt;/h3&gt;
&lt;p&gt;Randomised experiments work because we physically create a procedure that severs the exposure from the outcome other than through the treatment. The proverbial coin toss has no ancestors in the graphical model. Its only pathway to the outcome is through treatment (a child node), and therefore the causal relationship is identifiable without further controls (Figure 2d). For this reason, the randomised clinical trial (RCT) is held as the gold standard. &lt;a href=""&gt;@Bothwell2016&lt;/a&gt; However, the RCTs are expensive juggernauts that may additionally be unethical or impractical to deliver. &lt;a href=""&gt;@Adebamowo2014; @Frieden2017&lt;/a&gt; &lt;/p&gt;
&lt;h3&gt;Natural randomisation&lt;/h3&gt;
&lt;h4&gt;Instrumental variable methods&lt;/h4&gt;
&lt;p&gt;An alternative is to identify natural experiments where a pre-existing process takes the place of the coin toss or concealed envelope. These are normally termed &lt;em&gt;Instrumental Variable analyses&lt;/em&gt; where the instrument is the natural randomisation event. They can be best thought of as randomised controlled trials with imperfect 'compliance'.
The best 'compliance' possibly occurs with deliberate randomisation events not originally intended for research. For example, in 1969 the United States operated a lottery based on birthday and initials to conscript men to fight in the Vietnam war. This random allocation to military service was subsequently used to show that veteran status negatively affects future career progression as a civilian.&lt;a href=""&gt;^4&lt;/a&gt;&lt;a href=""&gt;@Angrist1990&lt;/a&gt; Similarly, in the Oregon Experiment an expansion of health insurance was allocated by lottery, and used to show that use of preventive health services substantially increased.&lt;a href=""&gt;@Baicker2013a&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Mendelian randomisation&lt;/em&gt; studies offer another classic natural experiment albeit with less perfect compliance because of imperfect genetic penetrance. These studies take advantage of the random chromosomal sorting of alleles (Mendel's second law of 'Independent Assortment').&lt;a href=""&gt;@Katan1986&lt;/a&gt; For example, low cholesterol had been hypothesised to increase the risk of cancer. However, this was disproved using the Apolipoprotein genotype (ApoE) wherein ApoE2 carriers (low cholesterol) has the same cancer related mortality as ApoE4 carriers (high cholesterol).&lt;a href=""&gt;@Trompet2009&lt;/a&gt;
Finally, we can use the interaction of random events with the natural variation in the delivery of care. For example. researchers compared regional versus general anaesthesia for hip fracture based on the variation in practice between hospitals. Patients living half way between a hospital that prefers general anaesthesia and a hospital that prefers regional techniques are randomised by the ambulance choosing to turn left or right as it leaves the patient's home to drive to the hospital. Mortality was shown to be similar, but length of stay shorter with the use of regional techniques.&lt;a href=""&gt;@Neuman2014a&lt;/a&gt;
In the forthcoming Sprint National Anaesthesia Project (Epidemiology of Critical Care after Surgery), we will use ICU occupancy at the time of surgery as random event that affects subsequent access to ICU (Figure 2d). &lt;a href=""&gt;@Moonesinghe2017a&lt;/a&gt; A similar strategy has been used to evaluate the effect of ICU on deteriorating ward patients. &lt;a href=""&gt;@Harris2015a&lt;/a&gt;
In all of these examples, a randomising node with no ancestors has a single path through a downstream treatment to the outcome being studied, and so the causal effect is identifiable.&lt;/p&gt;
&lt;h4&gt;Regression discontinuity designs&lt;/h4&gt;
&lt;p&gt;A regression discontinuity design uses the interaction between natural variation in measurements and a rigid protocol or administrative rule to generate a randomising event. For example primary care guidelines mandate, statin prescriptions where the 10-year cardiovascular risk exceeds 20%. Individuals whose risk falls immediately on either side of the boundary (19.9% versus 20.1%) will receive different treatment recommendations despite being otherwise very similar.&lt;a href=""&gt;@Geneletti2014&lt;/a&gt; We could imagine an application of this approach to the question of long term survival following surgery if there was a recommendation to provide critical care where the pre-operatively measured predicted post-operative risk exceeded a certain threshold. The variables used to define post-operative risk include physiology and laboratory measures. Patients with risks just above and just below the threshold are effectively randomised by the natural variation and measurement error inherent in such measures . &lt;/p&gt;
&lt;h4&gt;Difference-in-differences (DD) and Interrupted Time Series (ITS) analyses&lt;/h4&gt;
&lt;p&gt;Difference-in-differences (DD) and Interrupted Times Series (ITS) analyses are modifications of the classical 'before and after studies' that attempt to handle the criticism that differences are driven by underlying secular trends. Both exploit an external random shock to a system that alters the delivery of care. The classical example of a DD study examined the introduction of a minimum wage on employment in New Jersey in 1992. The neighbouring state of Pennsylvania that made no such policy change was used as as a control for changes in employment driven by other factors.&lt;br&gt;
Difference-in-Difference studies require just two measurements (before and after) across two or more entities (410 fast food restaurants in the above example). ITS analyses require multiple measurements over time (the 'time series') for one or more entities. For example, the NHS introduced a pay for performance scheme for critical care, the Quality and Outcome Framework (QOF) in 2004--5. It was adopted immediately by almost all general practitioners (GP) precluding a DD analysis that would require that some GPs did not participate. However, longitudinal data from several years before to several years after ( 2000-2007) showed a significant uplift in performance measures for different target conditions.&lt;a href=""&gt;@Kontopantelis2015&lt;/a&gt; 
In our example, we might imagine the introduction of a new billing code for peri-operative care. This could either be studied in a single institution with longitudinal data as an ITS, or across multiple institutions that differentially affected by the billing code in a DD design.&lt;/p&gt;
&lt;h2&gt;Non-causal estimation of effects&lt;/h2&gt;
&lt;p&gt;Finally, end by summarising other non-causal approaches with particular emphasis on propensity score models since they are often misunderstood &lt;a href=""&gt;@Freemantle2013&lt;/a&gt;
1. Unadjusted association
2. Case-control design
3. Regression models and the wider family
4. Propensity score models: &lt;a href=""&gt;@Raghunathan2016&lt;/a&gt;; Raghunathan K, Layton JB, Ohnuma T, Shaw AD. Observational Research Using Propensity Scores. Adv Chronic Kidney Dis. 2016;23:367-372.&lt;/p&gt;
&lt;h3&gt;Propensity score models :Worked example: Critical Care admission and patient outcomes&lt;/h3&gt;
&lt;p&gt;PSM works on the principle that patients with equal probabilities (propensities) for receiving an intervention would be similar in terms of their baseline confounders, and thus comparing outcomes on individuals matched on their propensity scores would reduce or eliminate the effects of confounding by balancing the distribution of confounder variables. Propensity scores would be computed for each individual based on baseline characteristics, using multivariable regression. Then each individual allocated to an intervention would then be matched to one or more individuals with similar or equal propensity scores. We can illustrate this graphically, building again upon our earlier model of the Khuri &lt;em&gt;et al&lt;/em&gt; paper using the modified subset of variables, but in this instance substituting "Peri-op Care" for "Critical Care Admission" (Figure xx.a).
In our example, we might compute a propensity score for the likelihood of Critical Care Admission, using Age and Frailty as predictors. We then match patients with the same propensity scores but differing on whether or not they received the treatment of interest (Critical Care admission). As a result we block the path for Age and Frailty to the Mortality outcome, by conditioning patients through their propensity scores. &lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;&lt;a href=""&gt;^1&lt;/a&gt;: bibtex: StiglerHistoryStatistics1986&lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;^2&lt;/a&gt;: Laplace's estimates, annotate and cite&lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;^3&lt;/a&gt;: .&lt;/p&gt;
&lt;p&gt;&lt;a href=""&gt;^4&lt;/a&gt;: Importantly, an IV analysis only offers information for the 'compliers' within the natural experiment. As an example, this means that we can not use the draft to understand future political success since several US politicians (notably George W Bush and Donald Trump) were exempted from the draft.&lt;/p&gt;</content><category term="[methods"></category><category term="research"></category><category term="causal-inference]"></category></entry><entry><title>No Free Lunch</title><link href="/no-free-lunch.html" rel="alternate"></link><published>2016-09-26T00:00:00+00:00</published><updated>2016-09-26T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2016-09-26:/no-free-lunch.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;The average is the modern solution to summarising data. Where more than one measurement existed, then the original historical reflex was to choose the best measurement: a fine strategy if you know which is best. Originally, God, the Church, or the King (as His official representative) would choose. Practically, this …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;The average is the modern solution to summarising data. Where more than one measurement existed, then the original historical reflex was to choose the best measurement: a fine strategy if you know which is best. Originally, God, the Church, or the King (as His official representative) would choose. Practically, this meant the 'most expensive' measurement (see Stephen Siegler).&lt;/p&gt;
&lt;p&gt;Empiricism, and the Scientific Revolution, changed all that. A more democratic view of the world suggested instead that combining all measurements would give a better version of the truth. The mean sums all measures before dividing to rescale. The median sorts all measures and then chooses the most central one. Instinctively, this feels like an improvement but there is still a cost, and it is instructive to to consider these 'loss functions'. The mean is chosen to minimise the square of the difference between the 'summary figure', and each measurement. The median minimises the absolute difference. Where data are normally distributed then the mean and the median coincide. Where the distribution is not symmetrical then this is not necessarily so. &lt;/p&gt;
&lt;p&gt;There is an advantage in being able to summarise data with a handful of parameters, but the added advantage of understanding the loss function is an insight into the cost.&lt;/p&gt;</content><category term="[rstats"></category><category term="tips"></category><category term="methods]"></category></entry><entry><title>Simpson's Paradox backwards</title><link href="/simpsons-paradox-backwards.html" rel="alternate"></link><published>2016-02-13T00:00:00+00:00</published><updated>2016-02-13T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2016-02-13:/simpsons-paradox-backwards.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;I have been enjoying reading Judea Pearl's new book &lt;em&gt;Causal Inference in Statistics: A primer&lt;/em&gt;&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Following on from their example, consider trying to choose between two doctors. You automatically choose the one with the best outcomes. But suppose the one with the best outcomes chooses the easiest cases. The …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;I have been enjoying reading Judea Pearl's new book &lt;em&gt;Causal Inference in Statistics: A primer&lt;/em&gt;&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Following on from their example, consider trying to choose between two doctors. You automatically choose the one with the best outcomes. But suppose the one with the best outcomes chooses the easiest cases. The other's poorer record is a consequence of trickier work. Now who do you choose? Better to look at the results stratified by difficulty and then decide.&lt;/p&gt;
&lt;p&gt;There is another side to the coin however which says that the stratified outcomes would lead you to the wrong choice. This time consider choosing to use a drug or not. The drug has a toxic side effect, but its therapeutic mechanism of action is through lowering blood pressure. Overall, the drug improves outcomes in the population, but when stratifying on &lt;em&gt;post-treatment&lt;/em&gt; blood pressure the outcomes are worse in both the low and the high blood pressure groups. How can this be true? Because we have unintentionally stratified on the outcome, and within each outcome all that remains to observe is the toxic side effect.&lt;/p&gt;
&lt;p&gt;To clarify, imagine the drug is designed to fix broken hearts, and it does this by lowering the blood pressure, and instead of stratifying on blood pressure we stratify on fixed hearts. When the drug works, the heart is fixed (and the blood pressure will be lower), but some of the patients will also get the toxic side effect. Because the drug works, the 'fixed heart' group will have more patients who have taken the drug, than there are patients taking the drug in the 'broken' heart group. More patients taking the drug means more patients getting side effects, and apparently (but falsely) better outcomes for patients who didn't take the drug.&lt;/p&gt;
&lt;p&gt;The patients who get better without taking the drug are just lucky. The patients who took the drug and got better are a mixture of those who needed the drug to get better, and those who would have been lucky anyway. Examining only patients with 'fixed hearts' means excluding patients who &lt;em&gt;would have&lt;/em&gt; been fixed had they taken the drug. Excluding such patients means excluding the harm from &lt;em&gt;not taking&lt;/em&gt; the drug which in turn means we only see the harm from &lt;em&gt;taking&lt;/em&gt; the drug. &lt;/p&gt;
&lt;p&gt;Simpson's paradox arises when there is a cause  for the outcome other than the treatment such as the fact that your doctor only does tricky cases. Controlling for the common cause (tricky versus easy cases) allows us to see the true effect. In the latter example, we have unintentionally stratified on an outcome not on a cause which means the true answer is in the aggregate not the stratified data.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;Pearl J. Causal Inference in Statistics. John Wiley &amp;amp; Sons; 2016&amp;#160;&lt;a class="footnote-backref" href="#fnref-1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="[statistics"></category><category term="tutorial]"></category></entry><entry><title>R functions you should know</title><link href="/r-functions-you-should-know.html" rel="alternate"></link><published>2016-01-28T00:00:00+00:00</published><updated>2016-01-28T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2016-01-28:/r-functions-you-should-know.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;A running list of R functions that &lt;em&gt;I&lt;/em&gt; should have known, and didn't with a minimal worked example in the style of &lt;a href="http://tldr-pages.github.io"&gt;tl;dr&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Assignment operator &lt;code&gt;&amp;lt;-&lt;/code&gt; versus &lt;code&gt;&amp;lt;&amp;lt;-&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; a &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="c1"&gt;# assigns only within the environment&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; f &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    a &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
    &lt;span class="kp"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;a&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; f&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; a
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;   &lt;span class="c1"&gt;# nothing happens &amp;#39;a&amp;#39; hasn …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;A running list of R functions that &lt;em&gt;I&lt;/em&gt; should have known, and didn't with a minimal worked example in the style of &lt;a href="http://tldr-pages.github.io"&gt;tl;dr&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Assignment operator &lt;code&gt;&amp;lt;-&lt;/code&gt; versus &lt;code&gt;&amp;lt;&amp;lt;-&lt;/code&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; a &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;    &lt;span class="c1"&gt;# assigns only within the environment&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; f &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    a &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
    &lt;span class="kp"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;a&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; f&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; a
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;   &lt;span class="c1"&gt;# nothing happens &amp;#39;a&amp;#39; hasn&amp;#39;t changed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; f &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    a &lt;span class="o"&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="c1"&gt;# will assign &amp;#39;out of the environment&amp;#39;&lt;/span&gt;
    &lt;span class="kp"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;a&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; f&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; a
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;   &lt;span class="c1"&gt;# &amp;#39;a&amp;#39; is updated by &amp;lt;&amp;lt;- even within the function&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;sample()&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; size&lt;span class="p"&gt;,&lt;/span&gt; replace &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; prob &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Return &lt;code&gt;size&lt;/code&gt; random samples from a vector &lt;code&gt;x&lt;/code&gt; with or without &lt;code&gt;replace&lt;/code&gt;ment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="m"&gt;43&lt;/span&gt;  &lt;span class="m"&gt;87&lt;/span&gt;  &lt;span class="m"&gt;71&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;  &lt;span class="m"&gt;75&lt;/span&gt;  &lt;span class="m"&gt;21&lt;/span&gt;  &lt;span class="m"&gt;79&lt;/span&gt;  &lt;span class="m"&gt;65&lt;/span&gt;  &lt;span class="m"&gt;24&lt;/span&gt;  &lt;span class="m"&gt;45&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;rep()&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; times&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;rep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; each&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Replicate the whole item (&lt;code&gt;times&lt;/code&gt;), or each element of the item (&lt;code&gt;each&lt;/code&gt;)&lt;/p&gt;
&lt;h2&gt;order()&lt;/h2&gt;
&lt;p&gt;Sort (re-order) a dataframe by values in a column&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; df &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;letters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; df
  x y
&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; a
&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; b
&lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;
&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; d
&lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; e
&lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; f
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; df&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;df&lt;span class="o"&gt;$&lt;/span&gt;x&lt;span class="p"&gt;),]&lt;/span&gt;
  x y
&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; a
&lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; f
&lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; b
&lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; e
&lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;
&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; d
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;subset()&lt;/h2&gt;
&lt;p&gt;Saves some typing when selecting rows from a data frame, and so the following are all equivalent.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mtcars&lt;span class="p"&gt;[&lt;/span&gt;mtcars&lt;span class="o"&gt;$&lt;/span&gt;cyl&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="p"&gt;,&lt;/span&gt; cyl&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The 'data.table' library automagically does this for you:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;data.table&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="p"&gt;)[&lt;/span&gt;cyl&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;which()&lt;/h2&gt;
&lt;p&gt;Select items based on a logical test ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; df &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;letters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; df&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;which&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;df&lt;span class="o"&gt;$&lt;/span&gt;x &lt;span class="o"&gt;%%&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),]&lt;/span&gt;
  x y
&lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; d
&lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; e
&lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; f
&lt;/pre&gt;&lt;/div&gt;</content><category term="[rstats"></category><category term="tips"></category><category term="runninglist]"></category></entry><entry><title>advanced r book notes</title><link href="/advanced-r-book-notes.html" rel="alternate"></link><published>2016-01-26T00:00:00+00:00</published><updated>2016-01-26T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2016-01-26:/advanced-r-book-notes.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;A series of notes gleaned from reading Hadley Wickham's &lt;a href="http://adv-r.had.co.nz"&gt;Advanced R&lt;/a&gt;.&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt; For now, I have created sections based around each chapter. I suspect that will rapidly make this page very cumbersome, but it seems like a good place to start.&lt;/p&gt;
&lt;h2&gt;Unsorted general tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;read the source code of functions …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;A series of notes gleaned from reading Hadley Wickham's &lt;a href="http://adv-r.had.co.nz"&gt;Advanced R&lt;/a&gt;.&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt; For now, I have created sections based around each chapter. I suspect that will rapidly make this page very cumbersome, but it seems like a good place to start.&lt;/p&gt;
&lt;h2&gt;Unsorted general tips&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;read the source code of functions that you use often to learn a little about programming style&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Data structures&lt;/h2&gt;
&lt;p&gt;Useful functions for exploring&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;typeof()&lt;/code&gt;: what is it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;length()&lt;/code&gt;: how many elements within it&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attributes()&lt;/code&gt;: does it have any meta-data associated with it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4 common types of atomic vectors&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;logical&lt;/li&gt;
&lt;li&gt;integer&lt;/li&gt;
&lt;li&gt;double (aka numeric)&lt;/li&gt;
&lt;li&gt;character&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So &lt;code&gt;is.logical()&lt;/code&gt; etc. confirms the type of an object.&lt;/p&gt;
&lt;p&gt;Coercion means that if you &lt;code&gt;c()&lt;/code&gt; (combine) different data types then instead of throwing an error, the most flexible type will be used (e.g. c(1, 'one') will become ['1', 'one']).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;list()&lt;/code&gt; is similar to &lt;code&gt;c()&lt;/code&gt; (combine) but combines things of different types without coercion or loss of information.&lt;/p&gt;
&lt;h3&gt;Attributes&lt;/h3&gt;
&lt;p&gt;Think of these as a list of key:pair values assigned to another object. You can create attributes, but the core attributes that always exist are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;names: &lt;code&gt;names()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;dimensions: &lt;code&gt;dim()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;class: &lt;code&gt;class()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More generally &lt;code&gt;attributes()&lt;/code&gt; gets the list of attributes or &lt;code&gt;attr(object, attribute_name)&lt;/code&gt; gets one specific attribute. &lt;/p&gt;
&lt;p&gt;Factors are a integers with a class 'factor', and a 'levels' attribute that defines their legal values.&lt;/p&gt;
&lt;h2&gt;Subsetting&lt;/h2&gt;
&lt;p&gt;Subsetting simply means extracting specific bits of an object: for example, a column of data from a dataframe.&lt;/p&gt;
&lt;h3&gt;The &lt;code&gt;[&lt;/code&gt; subsetting operator&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;a positive integer extacts objects from that position where '1' is the first place (not '0' as in languages such as Python)&lt;/li&gt;
&lt;li&gt;a negative integer returns everything &lt;em&gt;except&lt;/em&gt; the position&lt;/li&gt;
&lt;li&gt;note that you cannot combine negative and positive numbers&lt;/li&gt;
&lt;li&gt;a logical vector returns those elements where the corresponding value is &lt;code&gt;TRUE&lt;/code&gt;. This allows you to write 'tests' to extract items according to rules. The recycling rule means that if the 'test' is shorter than the object it will be recycled repeatedly until the end of the object (e.g. &lt;code&gt;c(TRUE, FALSE)&lt;/code&gt; will extract every other element.&lt;/li&gt;
&lt;li&gt;if the vector is named then you can extract elements matching the names&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Other subsetting operators&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[[&lt;/code&gt; is needed with lists since it returns the &lt;em&gt;contents&lt;/em&gt; of the list at that position rather than a subset of the list (i.e. another list)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$&lt;/code&gt; is a shorthand for &lt;code&gt;[[&lt;/code&gt; that doesn't require a perfect character match&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To see these differences, try ...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mtcars[&amp;quot;cyl&amp;quot;]
mtcars[[&amp;quot;cyl&amp;quot;]]
mtcars$cy
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Understand simplifying vs. preserving&lt;/h3&gt;
&lt;p&gt;Beware that some subsetting operations try and return the &lt;em&gt;simplest&lt;/em&gt; object needed to represent the subset (and therefore changes the structure of the object). Simplifying will remove names, unused levels of a factor, dimensions of matrices (that have length 1) etc. &lt;/p&gt;
&lt;p&gt;As a rule of thumb &lt;code&gt;[[&lt;/code&gt; (and therefore &lt;code&gt;$&lt;/code&gt;) simplifies whereas &lt;code&gt;[&lt;/code&gt; preserves.&lt;sup id="fnref-2"&gt;&lt;a class="footnote-ref" href="#fn-2"&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Subsetting with nothing can be useful in conjunction with assignment because it will preserve the original object class and structure. Compare the following two expressions. In the first, mtcars will remain as a data frame. In the second, mtcars will become a list.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mtcars&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;as.integer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
mtcars &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;mtcars&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;as.integer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;A very cool website built using R markdown, pandoc and Jekyll. Note to self. Copy this!&amp;#160;&lt;a class="footnote-backref" href="#fnref-1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn-2"&gt;
&lt;p&gt;There's a nice table in the book under the 'Simplifying vs. preserving subsetting' section &lt;a href="http://adv-r.had.co.nz/Subsetting.html"&gt;here&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref-2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="[rstats"></category><category term="books"></category><category term="notes"></category><category term="runningfile]"></category></entry><entry><title>Parsing command line options in R</title><link href="/parsing-command-line-options-in-r.html" rel="alternate"></link><published>2016-01-18T00:00:00+00:00</published><updated>2016-01-18T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2016-01-18:/parsing-command-line-options-in-r.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Notes to myself in the form of an R script about how to parse command line arguments. See &lt;a href="http://stackoverflow.com/questions/2151212/ddg#2154190"&gt;StackOverflow&lt;/a&gt; for alternatives.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#! /usr/local/bin/Rscript&lt;/span&gt;

&lt;span class="c1"&gt;# Hashbang line - optional when running interactively but if you wish to&lt;/span&gt;
&lt;span class="c1"&gt;# run `myfile.R` instead of `Rscript myfile.R`&lt;/span&gt;
&lt;span class="c1"&gt;# Don&amp;#39;t forget to chmod +x …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Notes to myself in the form of an R script about how to parse command line arguments. See &lt;a href="http://stackoverflow.com/questions/2151212/ddg#2154190"&gt;StackOverflow&lt;/a&gt; for alternatives.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#! /usr/local/bin/Rscript&lt;/span&gt;

&lt;span class="c1"&gt;# Hashbang line - optional when running interactively but if you wish to&lt;/span&gt;
&lt;span class="c1"&gt;# run `myfile.R` instead of `Rscript myfile.R`&lt;/span&gt;
&lt;span class="c1"&gt;# Don&amp;#39;t forget to chmod +x myfile.R first&lt;/span&gt;

&lt;span class="c1"&gt;# Testing out docopt package&lt;/span&gt;
&lt;span class="c1"&gt;# See http://docopt.org&lt;/span&gt;
&lt;span class="c1"&gt;# and&lt;/span&gt;
&lt;span class="c1"&gt;# https://cran.r-project.org/web/packages/docopt/index.html&lt;/span&gt;

&lt;span class="c1"&gt;# install.packages(&amp;quot;docopt&amp;quot;) &lt;/span&gt;

&lt;span class="c1"&gt;# Doc string below then assigned to name &amp;#39;doc&amp;#39;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;usage: scratch.R [-v -m &amp;lt;msg&amp;gt;] &amp;lt;param&amp;gt; &amp;lt;file_arg&amp;gt; &lt;/span&gt;

&lt;span class="s"&gt;options:&lt;/span&gt;
&lt;span class="s"&gt; -v        verbose&lt;/span&gt;
&lt;span class="s"&gt; -m &amp;lt;msg&amp;gt;  Message&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; doc

&lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;docopt&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# load the docopt library to parse&lt;/span&gt;
&lt;span class="c1"&gt;# BEWARE if you have compulsory args on the command line then the&lt;/span&gt;
&lt;span class="c1"&gt;# interactive versino will fail hence the `try` wrapper below which&lt;/span&gt;
&lt;span class="c1"&gt;# assigns the args needed&lt;/span&gt;

opts &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;try&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;docopt&lt;span class="p"&gt;(&lt;/span&gt;doc&lt;span class="p"&gt;),&lt;/span&gt; silent&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# parse command line arguments &lt;/span&gt;
&lt;span class="c1"&gt;# NB: Uses the syntax structure of the doc string to define these&lt;/span&gt;

&lt;span class="c1"&gt;# If interactive then no args so define these here&lt;/span&gt;
&lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;class&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;opts&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;try-error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    opts &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    opts&lt;span class="o"&gt;$&lt;/span&gt;m &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Interactive Script&amp;quot;&lt;/span&gt;
    opts&lt;span class="o"&gt;$&lt;/span&gt;v &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kc"&gt;FALSE&lt;/span&gt;
    &lt;span class="kp"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;str&lt;span class="p"&gt;(&lt;/span&gt;opts&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;opts&lt;span class="o"&gt;$&lt;/span&gt;v&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;str&lt;span class="p"&gt;(&lt;/span&gt;opts&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="kp"&gt;is.null&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;opts&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="kp"&gt;message&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="kp"&gt;cat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;MESSAGE: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; opts&lt;span class="o"&gt;$&lt;/span&gt;m&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now on the command line&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; Rscript scratch.R -v -m CommandLineScript foo bar.txt

Welcome at Mon Jan &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:29:04 &lt;span class="m"&gt;2016&lt;/span&gt;
Loading required package: docopt
Loading required package: methods
List of &lt;span class="m"&gt;8&lt;/span&gt;
 $ -v        : logi TRUE
 $ -m        : chr &lt;span class="s2"&gt;&amp;quot;CommandLineScript&amp;quot;&lt;/span&gt;
 $ &amp;lt;param&amp;gt;   : chr &lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;
 $ &amp;lt;file_arg&amp;gt;: chr &lt;span class="s2"&gt;&amp;quot;bar.txt&amp;quot;&lt;/span&gt;
 $ v         : logi TRUE
 $ m         : chr &lt;span class="s2"&gt;&amp;quot;CommandLineScript&amp;quot;&lt;/span&gt;
 $ param     : chr &lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;
 $ file_arg  : chr &lt;span class="s2"&gt;&amp;quot;bar.txt&amp;quot;&lt;/span&gt;
NULL

Goodbye at  Mon Jan &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:29:04 &lt;span class="m"&gt;2016&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the console output from an interactive session&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;scratch.R&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
List of &lt;span class="m"&gt;2&lt;/span&gt;
 &lt;span class="o"&gt;$&lt;/span&gt; m&lt;span class="o"&gt;:&lt;/span&gt; chr &lt;span class="s"&gt;&amp;quot;Interactive Script&amp;quot;&lt;/span&gt;
 &lt;span class="o"&gt;$&lt;/span&gt; v&lt;span class="o"&gt;:&lt;/span&gt; logi &lt;span class="kc"&gt;FALSE&lt;/span&gt;
&lt;span class="kc"&gt;NULL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;Note that you can't parse a command line argument surrounded by quotes or using spaces. This seems to be a &lt;a href="http://stackoverflow.com/questions/33844516/quote-marks-in-args-for-littler-docopt/33844969#33844969"&gt;bug&lt;/a&gt; in &lt;code&gt;docopt&lt;/code&gt;?&amp;#160;&lt;a class="footnote-backref" href="#fnref-1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="[]"></category></entry><entry><title>"Get up, git up"</title><link href="/get-up-git-up.html" rel="alternate"></link><published>2016-01-13T00:00:00+00:00</published><updated>2016-01-13T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2016-01-13:/get-up-git-up.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;I have been using &lt;a href="https://www.sourcetreeapp.com"&gt;SourceTree&lt;/a&gt; as a GUI for git, but just came across &lt;a href="http://gitup.co"&gt;GitUp&lt;/a&gt;. It starts off just looking like a pretty way to view your repository with a fairly typical graph, but you can in fact work from within the graph.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of GitUp" src="/images/gitup_160113.gif"&gt;&lt;/p&gt;
&lt;p&gt;To me, this makes things seem much …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;I have been using &lt;a href="https://www.sourcetreeapp.com"&gt;SourceTree&lt;/a&gt; as a GUI for git, but just came across &lt;a href="http://gitup.co"&gt;GitUp&lt;/a&gt;. It starts off just looking like a pretty way to view your repository with a fairly typical graph, but you can in fact work from within the graph.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot of GitUp" src="/images/gitup_160113.gif"&gt;&lt;/p&gt;
&lt;p&gt;To me, this makes things seem much more intuitive since I can see where I am, and how my work fits in with previous bits of work.&lt;/p&gt;
&lt;p&gt;Not only that it lays an undo/redo layer on top of your work. No more trying to work out how to unravel a series of misguided commits.&lt;/p&gt;
&lt;p&gt;Worth a look.&lt;/p&gt;</content><category term="[git"></category><category term="apps"></category><category term="osx]"></category></entry><entry><title>Awesome R</title><link href="/awesome-r.html" rel="alternate"></link><published>2016-01-12T00:00:00+00:00</published><updated>2016-01-12T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2016-01-12:/awesome-r.html</id><summary type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;A curated list of awesome R frameworks, packages and software.&lt;/p&gt;
&lt;/blockquote&gt;</summary><content type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;A curated list of awesome R frameworks, packages and software.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="[code"></category><category term="link"></category><category term="R"></category><category term="github]"></category></entry><entry><title>Globally set options in R markdown</title><link href="/globally-set-options-in-r-markdown.html" rel="alternate"></link><published>2015-12-31T00:00:00+00:00</published><updated>2015-12-31T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2015-12-31:/globally-set-options-in-r-markdown.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Normally you specify options in R markdown at the start of each chunk which requires typing them out for every block if they differ from the defaults.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sb"&gt;``&lt;/span&gt;`&lt;span class="p"&gt;{&lt;/span&gt;r echo&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; warnings&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;This line is printed but the one above isn&amp;#39;t&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;But you can specify these …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Normally you specify options in R markdown at the start of each chunk which requires typing them out for every block if they differ from the defaults.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="sb"&gt;``&lt;/span&gt;`&lt;span class="p"&gt;{&lt;/span&gt;r echo&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; warnings&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;ggplot2&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;This line is printed but the one above isn&amp;#39;t&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;But you can specify these options globally.

```{R}
```{r}
# Globally change R markdown options (need to load knitr first)
require(knitr)
opts_chunk$set(warning=FALSE, echo=FALSE)
library(ggplot2)
print(&amp;quot;This line is printed but the one above isn&amp;#39;t&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;```&lt;/p&gt;
&lt;p&gt;The trick is that you need the &lt;code&gt;knitr&lt;/code&gt; package loaded and not the &lt;code&gt;rmarkdown&lt;/code&gt; package otherwise you can't access &lt;code&gt;opts_chunk&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;More detail &lt;a href="http://stackoverflow.com/questions/11190281/global-comment-option-for-r-markdown-in-knitr"&gt;here&lt;/a&gt;&lt;/p&gt;</content><category term="[rstats"></category><category term="tip"></category><category term="markdown]"></category></entry><entry><title>Getting data into R</title><link href="/getting-data-into-r.html" rel="alternate"></link><published>2015-12-29T00:00:00+00:00</published><updated>2015-12-29T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2015-12-29:/getting-data-into-r.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Try&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hadley/readr/blob/master/README.md"&gt;readr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rdocumentation.org/packages/data.table/functions/fread"&gt;fread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read.csv&lt;/code&gt; in Base R but beware you need to specify &lt;code&gt;stringsAsFactors=FALSE&lt;/code&gt; otherwise strings are imported in a way that you are unlikely to find helpful&lt;/li&gt;
&lt;/ul&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Try&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/hadley/readr/blob/master/README.md"&gt;readr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.rdocumentation.org/packages/data.table/functions/fread"&gt;fread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read.csv&lt;/code&gt; in Base R but beware you need to specify &lt;code&gt;stringsAsFactors=FALSE&lt;/code&gt; otherwise strings are imported in a way that you are unlikely to find helpful&lt;/li&gt;
&lt;/ul&gt;</content><category term="[R"></category><category term="recipes"></category><category term="tutorial]"></category></entry><entry><title>Science isn't broken</title><link href="/science-isnt-broken.html" rel="alternate"></link><published>2015-12-27T00:00:00+00:00</published><updated>2015-12-27T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2015-12-27:/science-isnt-broken.html</id><summary type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The important lesson here is that a single analysis is not sufficient to find a definitive answer. Every result is a temporary truth, one that’s subject to change when someone else comes along to build, test and analyze anew.&lt;/p&gt;
&lt;/blockquote&gt;</summary><content type="html">&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;The important lesson here is that a single analysis is not sufficient to find a definitive answer. Every result is a temporary truth, one that’s subject to change when someone else comes along to build, test and analyze anew.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="[statistics"></category><category term="link"></category><category term="quotes]"></category></entry><entry><title>A day in the life ... visualised</title><link href="/a-day-in-the-life-visualised.html" rel="alternate"></link><published>2015-12-26T00:00:00+00:00</published><updated>2015-12-26T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2015-12-26:/a-day-in-the-life-visualised.html</id><summary type="html">&lt;hr&gt;</summary><content type="html">&lt;hr&gt;</content><category term="[statistics"></category><category term="link"></category><category term="dataviz]"></category></entry><entry><title>Data Analysis Using Regression and Multilevel/Hierarchical Models</title><link href="/data-analysis-using-regression-and-multilevelhierarchical-models.html" rel="alternate"></link><published>2015-12-19T00:00:00+00:00</published><updated>2015-12-19T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2015-12-19:/data-analysis-using-regression-and-multilevelhierarchical-models.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;These are notes from reading Andrew Gelman's and Jennifer Hill's 2007 edition of &lt;em&gt;Data Analysis Using Regression and Multilevel/Hierarchical Models&lt;/em&gt;. I started reading this book a few days ago, so these are running notes which I will update as progress. You could consider this a live 'book review'.&lt;/p&gt;
&lt;h2&gt;General …&lt;/h2&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;These are notes from reading Andrew Gelman's and Jennifer Hill's 2007 edition of &lt;em&gt;Data Analysis Using Regression and Multilevel/Hierarchical Models&lt;/em&gt;. I started reading this book a few days ago, so these are running notes which I will update as progress. You could consider this a live 'book review'.&lt;/p&gt;
&lt;h2&gt;General notes in no particular order&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.stat.columbia.edu/~gelman/arm/software/"&gt;This&lt;/a&gt; is the link to the data and examples from the book (the link in the Kindle edition of the book did not work for me).&lt;/li&gt;
&lt;li&gt;I also had trouble with the &lt;code&gt;sim&lt;/code&gt; function used in the examples. Switching from the &lt;code&gt;$&lt;/code&gt; to the &lt;code&gt;@&lt;/code&gt; operator seemed to help.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Original R code&lt;/span&gt;
&lt;span class="c1"&gt;# Error with $ operator for S4 class, try @&lt;/span&gt;
curve &lt;span class="p"&gt;(&lt;/span&gt;fit.2.sim&lt;span class="o"&gt;$&lt;/span&gt;coef&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; fit.2.sim&lt;span class="o"&gt;$&lt;/span&gt;coef&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; add&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Updated R code&lt;/span&gt;
curve &lt;span class="p"&gt;(&lt;/span&gt;fit.2.sim&lt;span class="o"&gt;@&lt;/span&gt;coef&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; fit.2.sim&lt;span class="o"&gt;@&lt;/span&gt;coef&lt;span class="p"&gt;[&lt;/span&gt;i&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; add&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;col&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;gray&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="[runningfile"></category><category term="notes"></category><category term="statistics"></category><category term="books"></category><category term="gelman]"></category></entry><entry><title>Bootstap at the cluster or unit level?</title><link href="/bootstap-at-the-cluster-or-unit-level.html" rel="alternate"></link><published>2015-12-17T00:00:00+00:00</published><updated>2015-12-17T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2015-12-17:/bootstap-at-the-cluster-or-unit-level.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;I have been using the bootstrap more often recently, but the data that I use is typically structured with patients nested in hospitals. The wonderful &lt;a href="http://stats.stackexchange.com/q/97115/7746"&gt;Cross Validated&lt;/a&gt; recommends that any sampling that is to be done should respect the structure of the data.&lt;/p&gt;
&lt;p&gt;This means first sampling (with replacement) hospitals …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;I have been using the bootstrap more often recently, but the data that I use is typically structured with patients nested in hospitals. The wonderful &lt;a href="http://stats.stackexchange.com/q/97115/7746"&gt;Cross Validated&lt;/a&gt; recommends that any sampling that is to be done should respect the structure of the data.&lt;/p&gt;
&lt;p&gt;This means first sampling (with replacement) hospitals, and then sampling (with replacement again) within each hospital before re-assembling the data.&lt;/p&gt;
&lt;p&gt;There is a better explanation along with a &lt;a href="http://biostat.mc.vanderbilt.edu/wiki/Main/HowToBootstrapCorrelatedData"&gt;code snippet&lt;/a&gt; from the biostats department at Vanderbilt. However, with 48 hospitals and 15000 patients, this ran very slowly.&lt;/p&gt;
&lt;p&gt;I have re-written this using the &lt;a href="https://github.com/Rdatatable/data.table/wiki"&gt;data.table&lt;/a&gt; with a good (great?) improvement in speed (but some loss of flexibility).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Generate sample data&lt;/span&gt;
&lt;span class="c1"&gt;# --------------------&lt;/span&gt;

tdt &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; data.table&lt;span class="p"&gt;(&lt;/span&gt;id&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;15000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; site&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; age&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;round&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;n&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; mean&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="c1"&gt;# Non data.table version&lt;/span&gt;
&lt;span class="c1"&gt;# ----------------------&lt;/span&gt;

resample &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dat&lt;span class="p"&gt;,&lt;/span&gt; cluster&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;# exit early for trivial data&lt;/span&gt;
  &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;nrow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dat&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="kp"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;replace&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dat&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="c1"&gt;# sample the clustering factor&lt;/span&gt;
  cls &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dat&lt;span class="p"&gt;[[&lt;/span&gt;cluster&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]]),&lt;/span&gt; replace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="c1"&gt;# subset on the sampled clustering factors&lt;/span&gt;
  sub &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;cls&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;b&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;subset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;dat&lt;span class="p"&gt;,&lt;/span&gt; dat&lt;span class="p"&gt;[[&lt;/span&gt;cluster&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;b&lt;span class="p"&gt;))&lt;/span&gt;

  &lt;span class="c1"&gt;# sample lower levels of hierarchy (if any)&lt;/span&gt;
  &lt;span class="kr"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;length&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;cluster&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    sub &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;lapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; resample&lt;span class="p"&gt;,&lt;/span&gt; cluster&lt;span class="o"&gt;=&lt;/span&gt;cluster&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; replace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="c1"&gt;# join and return samples&lt;/span&gt;
  &lt;span class="kp"&gt;do.call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;rbind&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# Data.table version&lt;/span&gt;
&lt;span class="c1"&gt;# ------------------&lt;/span&gt;

rsample2 &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;tdt&lt;span class="p"&gt;,&lt;/span&gt; id.unit&lt;span class="o"&gt;=&lt;/span&gt;id.u&lt;span class="p"&gt;,&lt;/span&gt; id.cluster&lt;span class="o"&gt;=&lt;/span&gt;id.c&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data.table&lt;span class="p"&gt;)&lt;/span&gt;

    setkeyv&lt;span class="p"&gt;(&lt;/span&gt;tdt&lt;span class="p"&gt;,&lt;/span&gt;id.cluster&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# Generate within cluster ID (needed for the sample command)&lt;/span&gt;
    tdt&lt;span class="p"&gt;[,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;id.within&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;SD&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;&lt;span class="kp"&gt;I&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; by&lt;span class="o"&gt;=&lt;/span&gt;id.cluster&lt;span class="p"&gt;,&lt;/span&gt; with&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# Random sample of sites&lt;/span&gt;
    bdt &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; data.table&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;unique&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tdt&lt;span class="p"&gt;[[&lt;/span&gt;id.cluster&lt;span class="p"&gt;]]),&lt;/span&gt; replace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    setnames&lt;span class="p"&gt;(&lt;/span&gt;bdt&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;V1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;id.cluster&lt;span class="p"&gt;)&lt;/span&gt;
    setkeyv&lt;span class="p"&gt;(&lt;/span&gt;bdt&lt;span class="p"&gt;,&lt;/span&gt;id.cluster&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Use random sample of sites to select from original data&lt;/span&gt;
    &lt;span class="c1"&gt;# then&lt;/span&gt;
    &lt;span class="c1"&gt;# within each site sample with replacement using the within site ID&lt;/span&gt;
    bdt &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tdt&lt;span class="p"&gt;[&lt;/span&gt;bdt&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;.&lt;/span&gt;SD&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kp"&gt;sample&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;SD&lt;span class="o"&gt;$&lt;/span&gt;id.within&lt;span class="p"&gt;,&lt;/span&gt; replace&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;by&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;.&lt;/span&gt;EACHI&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# return data sampled with replacement respecting clusters&lt;/span&gt;
    bdt&lt;span class="p"&gt;[,&lt;/span&gt; id.within &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="kc"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# drop id.within&lt;/span&gt;
    &lt;span class="kr"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;bdt&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

cluster &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;site&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;system.time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;d &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; resample&lt;span class="p"&gt;(&lt;/span&gt;tdt&lt;span class="p"&gt;,&lt;/span&gt;cluster&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;system.time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;d &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; resample&lt;span class="p"&gt;(&lt;/span&gt;tdt&lt;span class="p"&gt;,&lt;/span&gt;cluster&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="bp"&gt;T&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
   user  system elapsed 
  &lt;span class="m"&gt;8.597&lt;/span&gt;   &lt;span class="m"&gt;0.092&lt;/span&gt;   &lt;span class="m"&gt;8.786&lt;/span&gt; 
&lt;span class="kp"&gt;system.time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;d &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rsample2&lt;span class="p"&gt;(&lt;/span&gt;tdt&lt;span class="p"&gt;,&lt;/span&gt; id.unit&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; id.cluster&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;site&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;system.time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;d &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; rsample2&lt;span class="p"&gt;(&lt;/span&gt;tdt&lt;span class="p"&gt;,&lt;/span&gt; id.unit&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; id.cluster&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;site&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
   user  system elapsed 
  &lt;span class="m"&gt;0.051&lt;/span&gt;   &lt;span class="m"&gt;0.001&lt;/span&gt;   &lt;span class="m"&gt;0.052&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;</content><category term="[R"></category><category term="statistics"></category><category term="howto]"></category></entry><entry><title>An exact fishy test</title><link href="/an-exact-fishy-test.html" rel="alternate"></link><published>2015-12-11T00:00:00+00:00</published><updated>2015-12-11T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2015-12-11:/an-exact-fishy-test.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Unbelievable: What ever numbers you pick are statistically 'non-random'?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You chose the numbers 09 08 07 06 45 08 07 02 77 01&lt;/p&gt;
&lt;p&gt;But these are clearly not random numbers. We can tell because random numbers do not contain patterns but the numbers you entered show a fairly obvious pattern …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Unbelievable: What ever numbers you pick are statistically 'non-random'?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You chose the numbers 09 08 07 06 45 08 07 02 77 01&lt;/p&gt;
&lt;p&gt;But these are clearly not random numbers. We can tell because random numbers do not contain patterns but the numbers you entered show a fairly obvious pattern.&lt;/p&gt;
&lt;p&gt;Take another look at the sequence you put in. You will see that the number of times that two neighboring numbers are within 1 point of each other is: 4. But the `expected number' from a random process is just 0.3. How odd is this pattern? Quite odd in fact. The probability that a truly random process would turn up numbers like this is just p=3e-05 (i.e. less than 1%).&lt;/p&gt;
&lt;p&gt;Try again (with really random numbers this time)!&lt;/p&gt;
&lt;p&gt;ps: you might think that if the p value calculated above is high (for example if it is greater than 12%) that this means that the numbers you chose are not all that odd; but in fact it means that the numbers are really particularly odd since the probability that the fishy test would produce a p values above 12%, when really random sequences are used, is low (p&amp;lt;0.07). For more on how to fish see here.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://macartan.shinyapps.io/fish/"&gt;Try it yourself&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hint: Someone is doing some multiple testing ...&lt;/p&gt;</content><category term="[]"></category></entry><entry><title>How to make a great R reproducible example?</title><link href="/how-to-make-a-great-r-reproducible-example.html" rel="alternate"></link><published>2015-12-11T00:00:00+00:00</published><updated>2015-12-11T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2015-12-11:/how-to-make-a-great-r-reproducible-example.html</id><summary type="html">&lt;hr&gt;</summary><content type="html">&lt;hr&gt;</content><category term="[R"></category><category term="statistics"></category><category term="help"></category><category term="stackoverflow]"></category></entry><entry><title>Stopping rules and regression to the mean</title><link href="/stopping-rules-and-regression-to-the-mean.html" rel="alternate"></link><published>2015-12-11T00:00:00+00:00</published><updated>2015-12-11T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2015-12-11:/stopping-rules-and-regression-to-the-mean.html</id><summary type="html">&lt;hr&gt;</summary><content type="html">&lt;hr&gt;</content><category term="[statistics"></category><category term="link]"></category></entry><entry><title>"MathJax Example"</title><link href="/mathjax-example.html" rel="alternate"></link><published>2015-08-10T08:08:50-04:00</published><updated>2015-08-10T08:08:50-04:00</updated><author><name></name></author><id>tag:None,2015-08-10:/mathjax-example.html</id><summary type="html">&lt;p&gt;&lt;a href="http://www.mathjax.org/"&gt;MathJax&lt;/a&gt; is a simple way of including Tex/LaTex/MathML based mathematics in HTML webpages. To get up and running you need to include the MathJax script in the header of your github pages page, and then write some maths. For LaTex, there are two delimiters you need to know …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.mathjax.org/"&gt;MathJax&lt;/a&gt; is a simple way of including Tex/LaTex/MathML based mathematics in HTML webpages. To get up and running you need to include the MathJax script in the header of your github pages page, and then write some maths. For LaTex, there are two delimiters you need to know about, one for block or displayed mathematics &lt;code&gt;\[ ... \]&lt;/code&gt;, and the other for inline mathematics &lt;code&gt;\( ... \)&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;To enable MathJax support be sure Kramdown is your Markdown flavor of choice and MathJax is set to true in your &lt;code&gt;_config.yml&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;kramdown&lt;/span&gt;
&lt;span class="n"&gt;mathjax&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Here is an example MathJax inline rendering \\( 1/x^{2} \\), and here is a block rendering:
\\[ \frac{1}{n^{2}} \\]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here is an example MathJax inline rendering \( 1/x^{2} \), and here is a block rendering:
\[ \frac{1}{n^{2}} \]&lt;/p&gt;
&lt;p&gt;The only thing to look out for is the escaping of the backslash when using markdown, so the delimiters become &lt;code&gt;\\[ ... \\]&lt;/code&gt; and &lt;code&gt;\\( ... \\)&lt;/code&gt; for inline and block maths respectively.&lt;/p&gt;</content><category term="[]"></category></entry><entry><title>Calculate the SOFA score in R</title><link href="/calculate-the-sofa-score-in-r.html" rel="alternate"></link><published>2015-02-11T00:00:00+00:00</published><updated>2015-02-11T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2015-02-11:/calculate-the-sofa-score-in-r.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;A follow on from the Charlson score function previously &lt;a href="http://alittleknowledge.net/2014/11/27/calculate-the-charlson-score-in-r.html"&gt;posted&lt;/a&gt;. Here are functions to calculate the SOFA score.&lt;/p&gt;
&lt;p&gt;Please note&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it's almost inconceivable that your data will be similar to mine, and you will be able to just use these 'as is'; however, they might provide a useful skeleton.&lt;/li&gt;
&lt;li&gt;there …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;A follow on from the Charlson score function previously &lt;a href="http://alittleknowledge.net/2014/11/27/calculate-the-charlson-score-in-r.html"&gt;posted&lt;/a&gt;. Here are functions to calculate the SOFA score.&lt;/p&gt;
&lt;p&gt;Please note&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it's almost inconceivable that your data will be similar to mine, and you will be able to just use these 'as is'; however, they might provide a useful skeleton.&lt;/li&gt;
&lt;li&gt;there are some add-ons included (e.g. if a blood gas is not available then you can still generate the SOFA respiratory score using oxygen saturations and the S:F ratio via this (slightly flawed) &lt;a href="http://www.ncbi.nlm.nih.gov/pubmed/19242333"&gt;proposal&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;there are some arbitrary decisions too (i.e. vasopressin use is considered to assign patients to 4 SOFA points for cardiovascular dysfunction)&lt;/li&gt;
&lt;/ul&gt;
&lt;script src="https://gist.github.com/docsteveharris/195396d4b99e35bb4641.js"&gt;&lt;/script&gt;</content><category term="[R"></category><category term="howto"></category><category term="data-wrangling"></category><category term="severity-score]"></category></entry><entry><title>My first R package</title><link href="/my-first-r-package.html" rel="alternate"></link><published>2014-12-18T00:00:00+00:00</published><updated>2014-12-18T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-12-18:/my-first-r-package.html</id><summary type="html">&lt;p&gt;This is a complete copy of Hilary Parker's post and techinque, but I am unreasonably pleased with myself for this. Please direct all credit to &lt;a href="http://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/"&gt;Not So Standard Deviations&lt;/a&gt;. Any errors are mine - though it seems to work on my system. You'll note that my thankyou comment is the zillionth …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is a complete copy of Hilary Parker's post and techinque, but I am unreasonably pleased with myself for this. Please direct all credit to &lt;a href="http://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/"&gt;Not So Standard Deviations&lt;/a&gt;. Any errors are mine - though it seems to work on my system. You'll note that my thankyou comment is the zillionth on the list, and I found the link via Jeff Leek's excellent blog &lt;a href="http://simplystatistics.org/2014/12/17/a-non-comprehensive-list-of-awesome-things-other-people-did-in-2014/"&gt;simplystats&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here goes.&lt;/p&gt;
&lt;h2&gt;Set up&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Don&amp;#39;t evaluate this as the `create` will fail because the library already exits&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;devtools&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kn"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;roxygen2&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;setwd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/Users/steve/usr/lib/R-stuff&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
create&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;datascibc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;create&lt;/code&gt; command makes a subdirectory for the new package. Inside this, there is a file called &lt;code&gt;DESCRIPTION.R&lt;/code&gt;. I added my contact details, and the package description here.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Package&lt;span class="o"&gt;:&lt;/span&gt; datascibc
Title&lt;span class="o"&gt;:&lt;/span&gt; Miscellaneous helper functions
Version&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.1&lt;/span&gt;
Authors&lt;span class="o"&gt;@&lt;/span&gt;R&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Steve Harris &amp;lt;git@steveharris.me&amp;gt; [aut, cre]&amp;quot;&lt;/span&gt;
Description&lt;span class="o"&gt;:&lt;/span&gt; Miscellaneous helper functions&lt;span class="p"&gt;,&lt;/span&gt; but with a longer term plan to share these functions with the other members of &lt;span class="o"&gt;@&lt;/span&gt;datascibc
Depends&lt;span class="o"&gt;:&lt;/span&gt; R &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;3.1.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
License&lt;span class="o"&gt;:&lt;/span&gt; What license is it under&lt;span class="o"&gt;?&lt;/span&gt; Don&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;t know!&lt;/span&gt;
LazyData&lt;span class="o"&gt;:&lt;/span&gt; true
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There is also a &lt;code&gt;datascibc\R&lt;/code&gt; subdirectory. This is where you need to add the R functions you want to save. For example, in a file called &lt;code&gt;lookfor.R&lt;/code&gt; save the following.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# R version of lookfor: `names(data)[grep(&amp;#39;pattern&amp;#39;,names(data))]`&lt;/span&gt;
lookfor &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;d&lt;span class="p"&gt;,&lt;/span&gt;p&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;d&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="kp"&gt;grep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;p&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;d&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Not very easy to read is it. So now you are required to add some documentation via &lt;code&gt;roxygen2&lt;/code&gt; with detailed instructions &lt;a href="https://github.com/klutometis/roxygen#roxygen2"&gt;here&lt;/a&gt;. In fact, the documentation required for a package is more complicated, and it is roxygen2 that is making this process simple.&lt;/p&gt;
&lt;p&gt;Here is the file with comments added.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#&amp;#39; R version of the stata lookfor function&lt;/span&gt;
&lt;span class="c1"&gt;#&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;#&amp;#39; This will try to find a variable when you can&amp;#39;t remember its exact name&lt;/span&gt;
&lt;span class="c1"&gt;#&amp;#39; @param string_to_find This is the string you wish to find Defaults to &amp;#39;id&amp;#39;.&lt;/span&gt;
&lt;span class="c1"&gt;#&amp;#39; @keywords stata&lt;/span&gt;
&lt;span class="c1"&gt;#&amp;#39; @export&lt;/span&gt;
&lt;span class="c1"&gt;#&amp;#39; @examples&lt;/span&gt;
&lt;span class="c1"&gt;#&amp;#39; lookfor_function()&lt;/span&gt;
lookfor &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="o"&gt;=&lt;/span&gt;wdt&lt;span class="p"&gt;,&lt;/span&gt;string_to_find&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="kp"&gt;grep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;string_to_find&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kp"&gt;names&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now process the documentation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kp"&gt;setwd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;./datascibc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
document&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kp"&gt;setwd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We should be done, and I can now install my package.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;install&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;datascibc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## Installing datascibc&lt;/span&gt;
&lt;span class="c1"&gt;## &amp;#39;/Library/Frameworks/R.framework/Resources/bin/R&amp;#39; --vanilla CMD INSTALL  \&lt;/span&gt;
&lt;span class="c1"&gt;##   &amp;#39;/Users/steve/usr/lib/R-stuff/datascibc&amp;#39;  \&lt;/span&gt;
&lt;span class="c1"&gt;##   --library=&amp;#39;/Library/Frameworks/R.framework/Versions/3.1/Resources/library&amp;#39;  \&lt;/span&gt;
&lt;span class="c1"&gt;##   --install-tests&lt;/span&gt;
&lt;span class="c1"&gt;##&lt;/span&gt;
&lt;span class="c1"&gt;## Reloading installed datascibc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Let&amp;#39;s see if R can print the new function&lt;/span&gt;
lookfor
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## function (string_to_find, data = wdt)&lt;/span&gt;
&lt;span class="c1"&gt;## names(data)[grep(string_to_find, names(data))]&lt;/span&gt;
&lt;span class="c1"&gt;## &amp;lt;environment: namespace:datascibc&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Let&amp;#39;s test this&lt;/span&gt;
test_data &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;id&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; x&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
test_data
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;##    id  x&lt;/span&gt;
&lt;span class="c1"&gt;## 1   1  1&lt;/span&gt;
&lt;span class="c1"&gt;## 2   2 11&lt;/span&gt;
&lt;span class="c1"&gt;## 3   3 21&lt;/span&gt;
&lt;span class="c1"&gt;## 4   4 31&lt;/span&gt;
&lt;span class="c1"&gt;## 5   5 41&lt;/span&gt;
&lt;span class="c1"&gt;## 6   6 51&lt;/span&gt;
&lt;span class="c1"&gt;## 7   7 61&lt;/span&gt;
&lt;span class="c1"&gt;## 8   8 71&lt;/span&gt;
&lt;span class="c1"&gt;## 9   9 81&lt;/span&gt;
&lt;span class="c1"&gt;## 10 10 91&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lookfor&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; test_data&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;## [1] &amp;quot;id&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Hooray!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And again, Hooray!&lt;/p&gt;</content><category term="[howto"></category><category term="R]"></category></entry><entry><title>ggplot2 tips</title><link href="/ggplot2-tips.html" rel="alternate"></link><published>2014-12-01T00:00:00+00:00</published><updated>2014-12-01T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-12-01:/ggplot2-tips.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Another running file of useful tips (for me) when using the &lt;a href="http://ggplot2.org/"&gt;ggplot2&lt;/a&gt; library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;colour scales: I only just worked out how to find the names of the &lt;a href="http://colorbrewer2.org/#"&gt;ColorBrewer&lt;/a&gt; palettes that are available. The quickest way is to head over to the website, pick the colour scheme you want, and then …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Another running file of useful tips (for me) when using the &lt;a href="http://ggplot2.org/"&gt;ggplot2&lt;/a&gt; library.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;colour scales: I only just worked out how to find the names of the &lt;a href="http://colorbrewer2.org/#"&gt;ColorBrewer&lt;/a&gt; palettes that are available. The quickest way is to head over to the website, pick the colour scheme you want, and then note the name (see the arrow below), and pass this to &lt;code&gt;scale_color_brewer(type="seq", palette="YlOrRd")&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Screenshot of ColorBrewer" src="/images/141201_ColorBrewer__Color_Advice_for_Maps.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Just discovered the &lt;a href="http://cran.r-project.org/web/packages/GGally/index.html"&gt;GGally&lt;/a&gt; package. Seems to have a bunch of really help preset plots. For example, do you want to use ggplot2 to plot your survivor function? Then the &lt;code&gt;ggsurv&lt;/code&gt; function might help.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Beware: ggplot2 by default scales points by the radius not the area; this is potentially misleading but can be fixed by the &lt;a href="http://docs.ggplot2.org/current/scale_size_area.html"&gt;&lt;code&gt;scale_size_area()&lt;/code&gt;&lt;/a&gt; option.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="[runningfile"></category><category term="tips"></category><category term="howto]"></category></entry><entry><title>Sublime Text tips</title><link href="/sublime-text-tips.html" rel="alternate"></link><published>2014-12-01T00:00:00+00:00</published><updated>2014-12-01T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-12-01:/sublime-text-tips.html</id><summary type="html">&lt;p&gt;Just an aide-memoire for myself really. When referring to keybindings then I will use &lt;code&gt;C&lt;/code&gt; to indicate &lt;code&gt;Command&lt;/code&gt; (OS X) or &lt;code&gt;Control&lt;/code&gt; (Windows).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-D&lt;/code&gt; expands the current selection to the next word, but it's easy to overshoot. In which case, &lt;code&gt;C-U&lt;/code&gt; will undo (called a soft undo, and therefore distinct …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;Just an aide-memoire for myself really. When referring to keybindings then I will use &lt;code&gt;C&lt;/code&gt; to indicate &lt;code&gt;Command&lt;/code&gt; (OS X) or &lt;code&gt;Control&lt;/code&gt; (Windows).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;C-D&lt;/code&gt; expands the current selection to the next word, but it's easy to overshoot. In which case, &lt;code&gt;C-U&lt;/code&gt; will undo (called a soft undo, and therefore distinct to &lt;code&gt;C-Z&lt;/code&gt; and &lt;code&gt;C-shift-Z&lt;/code&gt;). A soft redo is &lt;code&gt;C-shift-U&lt;/code&gt;. (tip via &lt;a href="http://brettterpstra.com/2014/07/23/sublime-text-selections/"&gt;Brett Terpstra&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;</content><category term="[tips"></category><category term="runningfile"></category><category term="sublimetext]"></category></entry><entry><title>Syntax highlighting for R in the terminal</title><link href="/syntax-highlighting-for-r-in-the-terminal.html" rel="alternate"></link><published>2014-11-28T00:00:00+00:00</published><updated>2014-11-28T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-11-28:/syntax-highlighting-for-r-in-the-terminal.html</id><summary type="html">&lt;p&gt;So R-studio seemed to be running really slowly today which prompted me to try using R in the terminal. This works nicely with &lt;a href="https://github.com/randy3k/R-Box"&gt;R-Box&lt;/a&gt;. Otherwise said, type in Sublime Text, and execute in R (via iTerm.)&lt;/p&gt;
&lt;p&gt;This all worked much more quickly, and the plots show up in a lovely …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So R-studio seemed to be running really slowly today which prompted me to try using R in the terminal. This works nicely with &lt;a href="https://github.com/randy3k/R-Box"&gt;R-Box&lt;/a&gt;. Otherwise said, type in Sublime Text, and execute in R (via iTerm.)&lt;/p&gt;
&lt;p&gt;This all worked much more quickly, and the plots show up in a lovely quartz window. I lose a lot of the easy point-and-click functionality, but I never used the text editor so I don't miss that.&lt;/p&gt;
&lt;p&gt;What I did miss was syntax highlighting. The solution (via &lt;a href="http://stackoverflow.com/a/14480255/992999"&gt;StackOverflow&lt;/a&gt; as usual) is a super cool little package called &lt;a href="http://www.lepem.ufc.br/jaa/colorout.html"&gt;colorout&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before (top half) and after (bottom half) of my screen. Which looks nicer?&lt;/p&gt;
&lt;p&gt;&lt;img src = {filename}/images/141128_iTerm_colorout_screenshot.png style="width: 80%"/&gt;&lt;/p&gt;
&lt;p&gt;Don't forget to load the package in your &lt;code&gt;.Rprofile&lt;/code&gt; file.&lt;/p&gt;</content><category term="[code"></category><category term="howto"></category><category term="terminal]"></category></entry><entry><title>Calculate the Charlson score in R</title><link href="/calculate-the-charlson-score-in-r.html" rel="alternate"></link><published>2014-11-27T00:00:00+00:00</published><updated>2014-11-27T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-11-27:/calculate-the-charlson-score-in-r.html</id><summary type="html">&lt;p&gt;It is unlikely that anyone else will have data formatted in the same way as me, but it shouldn't be too hard to convert this.&lt;/p&gt;
&lt;p&gt;You just need a data where the rows represent patients, and there are a series of columns containing indicator variables for the components of the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It is unlikely that anyone else will have data formatted in the same way as me, but it shouldn't be too hard to convert this.&lt;/p&gt;
&lt;p&gt;You just need a data where the rows represent patients, and there are a series of columns containing indicator variables for the components of the Charlson score[1].&lt;/p&gt;
&lt;p&gt;The following function looks for these 20 variables, and uses a quick bit of matrix multiplication to generate the total score.&lt;/p&gt;
&lt;p&gt;{% gist docsteveharris/ab5ad52bc5115d962cb2 %}&lt;/p&gt;
&lt;p&gt;For reference, here is the table from the original paper containing the weights for the score.&lt;/p&gt;
&lt;!-- use raw html so you can set the width --&gt;

&lt;p&gt;&lt;img src = {filename}/images/141127_charlson_score.png style="width: 80%"/&gt;&lt;/p&gt;
&lt;p&gt;[1]: &lt;a href="http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=pubmed&amp;amp;amp;cmd=Retrieve&amp;amp;amp;dopt=AbstractPlus&amp;amp;amp;list_uids=3558716"&gt;Charlson ME, Pompei P, Ales KL, MacKenzie CR. A new method of classifying prognostic comorbidity in longitudinal studies: development and validation. Journal of Chronic Diseases. 1987;40:373-383.
&lt;/a&gt;&lt;/p&gt;</content><category term="[R"></category><category term="data-wrangling"></category><category term="howto"></category><category term="code]"></category></entry><entry><title>Adding comments to the blog</title><link href="/adding-comments-to-the-blog.html" rel="alternate"></link><published>2014-11-26T00:00:00+00:00</published><updated>2014-11-26T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-11-26:/adding-comments-to-the-blog.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Big day. I have added comments to the blog. Couldn't have been easier. Signed up for a &lt;a href="https://disqus.com/"&gt;disqus&lt;/a&gt; account, and followed the instructions &lt;a href="https://help.disqus.com/customer/portal/articles/472138-jekyll-installation-instructions"&gt;here&lt;/a&gt;. The only small hint I can offer is that when you add the 'Universal Embed code' the tags need to be enclosed in curly braces &lt;code&gt;{&lt;/code&gt; and …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Big day. I have added comments to the blog. Couldn't have been easier. Signed up for a &lt;a href="https://disqus.com/"&gt;disqus&lt;/a&gt; account, and followed the instructions &lt;a href="https://help.disqus.com/customer/portal/articles/472138-jekyll-installation-instructions"&gt;here&lt;/a&gt;. The only small hint I can offer is that when you add the 'Universal Embed code' the tags need to be enclosed in curly braces &lt;code&gt;{&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;My &lt;code&gt;post.html&lt;/code&gt; file looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;```html
---
layout: default
---
&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{%&amp;quot;&amp;quot; }} include post.html %}&lt;/span&gt;

&lt;span class="s2"&gt;{{ &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; if page.comments %}
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;disqus_thread&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = &amp;#39;alittleknowledgenet&amp;#39;; // required: replace example with your forum shortname

    /* * * DON&amp;#39;T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement(&amp;#39;script&amp;#39;); dsq.type = &amp;#39;text/javascript&amp;#39;; dsq.async = true;
        dsq.src = &amp;#39;//&amp;#39; + disqus_shortname + &amp;#39;.disqus.com/embed.js&amp;#39;;
        (document.getElementsByTagName(&amp;#39;head&amp;#39;)[0] || document.getElementsByTagName(&amp;#39;body&amp;#39;)[0]).appendChild(dsq);
    })();
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;Please enable JavaScript to view the &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://disqus.com/?ref_noscript&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;comments powered by Disqus.&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;

&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{%&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; endif %}
```
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;PS. It's not so straightforward to include a code snippet containing Liquid template tags in  a post, but the answer is &lt;a href="http://jamiecollinson.com/blog/how-to-escape-liquid-template-tags/"&gt;here&lt;/a&gt;.&lt;/p&gt;</content><category term="[howto"></category><category term="blog]"></category></entry><entry><title>QQ plots in R</title><link href="/qq-plots-in-r.html" rel="alternate"></link><published>2014-11-25T00:00:00+00:00</published><updated>2014-11-25T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-11-25:/qq-plots-in-r.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;I was trying to show some colleagues how to draw a &lt;a href="http://en.wikipedia.org/wiki/Q%E2%80%93Q_plot"&gt;QQ-plot&lt;/a&gt; in R today. I failed miserably, and so have just spent a bit of time trying to redeem myself.&lt;/p&gt;
&lt;p&gt;This should do it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Test data: 1000 patients with two different age distributions&lt;/span&gt;
tdt &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; data.table&lt;span class="p"&gt;(&lt;/span&gt;age.old&lt;span class="o"&gt;=&lt;/span&gt;rnorm …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;I was trying to show some colleagues how to draw a &lt;a href="http://en.wikipedia.org/wiki/Q%E2%80%93Q_plot"&gt;QQ-plot&lt;/a&gt; in R today. I failed miserably, and so have just spent a bit of time trying to redeem myself.&lt;/p&gt;
&lt;p&gt;This should do it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Test data: 1000 patients with two different age distributions&lt;/span&gt;
tdt &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; data.table&lt;span class="p"&gt;(&lt;/span&gt;age.old&lt;span class="o"&gt;=&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; mean&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;65&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; sd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; age.young&lt;span class="o"&gt;=&lt;/span&gt;rnorm&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;mean&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;sd&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# Function to compare two distributions using qplot&lt;/span&gt;
qqplot &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt;y&lt;span class="p"&gt;,&lt;/span&gt; data&lt;span class="o"&gt;=&lt;/span&gt;wdt&lt;span class="p"&gt;,&lt;/span&gt; n&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    lab.x &lt;span class="o"&gt;=&lt;/span&gt; x
    lab.y &lt;span class="o"&gt;=&lt;/span&gt; y
    x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;))&lt;/span&gt;
    x &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;n&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; quantile&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;q&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;data&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;))&lt;/span&gt;
    y &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;sapply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;seq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;n&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="kr"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;q&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; quantile&lt;span class="p"&gt;(&lt;/span&gt;y&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kp"&gt;q&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="c1"&gt;# Get axes symmetrical&lt;/span&gt;
    axes.minmax &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt;y&lt;span class="p"&gt;))),&lt;/span&gt; &lt;span class="kp"&gt;ceiling&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt;y&lt;span class="p"&gt;))))&lt;/span&gt;
    &lt;span class="kp"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;axes.minmax&lt;span class="p"&gt;)&lt;/span&gt;
    qplot&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="p"&gt;,&lt;/span&gt;y&lt;span class="p"&gt;,&lt;/span&gt; asp&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; xlab&lt;span class="o"&gt;=&lt;/span&gt;lab.x&lt;span class="p"&gt;,&lt;/span&gt; ylab&lt;span class="o"&gt;=&lt;/span&gt;lab.y&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
        geom_abline&lt;span class="p"&gt;(&lt;/span&gt;intercept&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;slope&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
        coord_cartesian&lt;span class="p"&gt;(&lt;/span&gt;x&lt;span class="o"&gt;=&lt;/span&gt;axes.minmax&lt;span class="p"&gt;,&lt;/span&gt; y&lt;span class="o"&gt;=&lt;/span&gt;axes.minmax&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
qqplot&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;age.young&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;age.old&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; data&lt;span class="o"&gt;=&lt;/span&gt;tdt&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That produces this.&lt;/p&gt;
&lt;p&gt;&lt;img alt="QQ-plot comparing two different age distributions" src="/images/141125_qqplot_1.png"&gt;&lt;/p&gt;
&lt;p&gt;And the point? It's a neat way to compare two different distributions. You can instantly see how close they are to each other.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Right shift age&lt;/span&gt;
tdt&lt;span class="p"&gt;[,&lt;/span&gt; age.rightshift &lt;span class="o"&gt;:=&lt;/span&gt; age.old &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
qqplot&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;age.old&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;age.rightshift&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; data&lt;span class="o"&gt;=&lt;/span&gt;tdt&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="QQ-plot to show right (additive) shift" src="/images/141125_qqplot_2.png"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# Scale age&lt;/span&gt;
tdt&lt;span class="p"&gt;[,&lt;/span&gt; age.scaled &lt;span class="o"&gt;:=&lt;/span&gt; age.old &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
qqplot&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;age.old&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;age.scaled&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; data&lt;span class="o"&gt;=&lt;/span&gt;tdt&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="QQ-plot to show scaling (multiplicative) shift" src="/images/141125_qqplot_3.png"&gt;&lt;/p&gt;
&lt;p&gt;Updated code available &lt;a href="https://gist.github.com/b36b908d7cb4de9b52b4"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And see &lt;a href="http://stats.stackexchange.com/a/101290/7746"&gt;this nice answer&lt;/a&gt; on Cross-validated with some example Q-norm plots (where you use the QQ-plot to compare your data to a normal distribution).&lt;/p&gt;</content><category term="[R"></category><category term="code"></category><category term="tutorial]"></category></entry><entry><title>Contingency Tables in R</title><link href="/contingency-tables-in-r.html" rel="alternate"></link><published>2014-11-24T00:00:00+00:00</published><updated>2014-11-24T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-11-24:/contingency-tables-in-r.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;Hmmm. As I have mentioned I am switching from Stata to R, and right now I am missing the nice simple &lt;code&gt;tab&lt;/code&gt; function from Stata that would give me a nice table like this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    tab dead7 icu_accept

           | Accepted to critical
        7d |         care
 mortality |         0          1 |     Total
-----------+----------------------+----------
     False |     8,143      2 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;Hmmm. As I have mentioned I am switching from Stata to R, and right now I am missing the nice simple &lt;code&gt;tab&lt;/code&gt; function from Stata that would give me a nice table like this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    tab dead7 icu_accept

           | Accepted to critical
        7d |         care
 mortality |         0          1 |     Total
-----------+----------------------+----------
     False |     8,143      2,589 |    10,732 
      True |     1,073        690 |     1,763 
-----------+----------------------+----------
     Total |     9,216      3,279 |    12,495
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And I can then easily add row and column percentages with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tab dead7 icu_accept, col row
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All in all a nice syntax.&lt;/p&gt;
&lt;p&gt;Assuming in R, my data is called &lt;code&gt;wdt&lt;/code&gt;, then my choices seem to be:&lt;/p&gt;
&lt;h2&gt;Use &lt;code&gt;table&lt;/code&gt; in base R&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;table(dead7, icu_accept)

       0    1
  0 8143 1073
  1 2589  690
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So the missing labels for the levels are my fault, but it would be nice to have variable labels. Am I looking at rows or columns for &lt;code&gt;dead7&lt;/code&gt;. All in all, a bit spartan.&lt;/p&gt;
&lt;h2&gt;Use &lt;code&gt;CrossTable&lt;/code&gt; in the &lt;code&gt;gmodels&lt;/code&gt; package&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;with(wdt, CrossTable(icu_accept, dead7))

   Cell Contents
|-------------------------|
|                       N |
| Chi-square contribution |
|           N / Row Total |
|           N / Col Total |
|         N / Table Total |
|-------------------------|

Total Observations in Table:  12495

             | dead7 
  icu_accept |         0 |         1 | Row Total | 
-------------|-----------|-----------|-----------|
           0 |      8143 |      1073 |      9216 | 
             |     6.530 |    39.748 |           | 
             |     0.884 |     0.116 |     0.738 | 
             |     0.759 |     0.609 |           | 
             |     0.652 |     0.086 |           | 
-------------|-----------|-----------|-----------|
           1 |      2589 |       690 |      3279 | 
             |    18.352 |   111.715 |           | 
             |     0.790 |     0.210 |     0.262 | 
             |     0.241 |     0.391 |           | 
             |     0.207 |     0.055 |           | 
-------------|-----------|-----------|-----------|
Column Total |     10732 |      1763 |     12495 | 
             |     0.859 |     0.141 |           | 
-------------|-----------|-----------|-----------|
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nicer! See &lt;a href="http://cran.r-project.org/web/packages/gmodels/index.html"&gt;http://cran.r-project.org/web/packages/gmodels/index.html&lt;/a&gt;&lt;/p&gt;</content><category term="[R statistics]"></category></entry><entry><title>Neglected blog? Check-out the Sublime Jekyll package</title><link href="/neglected-blog-check-out-the-sublime-jekyll-package.html" rel="alternate"></link><published>2014-11-18T00:00:00+00:00</published><updated>2014-11-18T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-11-18:/neglected-blog-check-out-the-sublime-jekyll-package.html</id><summary type="html">&lt;p&gt;Been neglecting this blog for a while, and that is because there is a certain amount of momentum required to write a post. However, I have now installed the &lt;a href="https://sublime.wbond.net/packages/Jekyll"&gt;Jekyll&lt;/a&gt; package for &lt;a href="http://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt;, and using this post as my first test.&lt;/p&gt;
&lt;p&gt;Now to publish ...&lt;/p&gt;</summary><content type="html">&lt;p&gt;Been neglecting this blog for a while, and that is because there is a certain amount of momentum required to write a post. However, I have now installed the &lt;a href="https://sublime.wbond.net/packages/Jekyll"&gt;Jekyll&lt;/a&gt; package for &lt;a href="http://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt;, and using this post as my first test.&lt;/p&gt;
&lt;p&gt;Now to publish ...&lt;/p&gt;</content><category term="[]"></category></entry><entry><title>Learning R</title><link href="/learning-r.html" rel="alternate"></link><published>2014-09-11T00:00:00+00:00</published><updated>2014-09-11T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-09-11:/learning-r.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;I was asked by a colleague yesterday if there were any resources on the internet to help learn R. I feel that that should have an answer crafted by someone like &lt;a href="http://xkcd.com/about/"&gt;Randall Munroe&lt;/a&gt; along the lines of 'What if you tried to count the number of ways there are to …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;I was asked by a colleague yesterday if there were any resources on the internet to help learn R. I feel that that should have an answer crafted by someone like &lt;a href="http://xkcd.com/about/"&gt;Randall Munroe&lt;/a&gt; along the lines of 'What if you tried to count the number of ways there are to learn R'?&lt;/p&gt;
&lt;p&gt;Whatever that number is, it's now +1.&lt;/p&gt;
&lt;p&gt;I'll start with an unordered list. If we're all lucky, then from time to time, I will try and order it so the good stuff goes to the top.&lt;/p&gt;
&lt;h1&gt;Tips&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.rstudio.com/"&gt;R-studio&lt;/a&gt; is nice!&lt;/li&gt;
&lt;li&gt;Typing &lt;code&gt;&amp;lt;-&lt;/code&gt; is annoying if you're used to &lt;code&gt;-&lt;/code&gt; as an assignment operator. R-studio has this remapped to &lt;code&gt;option+-&lt;/code&gt; (that's 'alt' and the hyphen key together). You can set-up something similar in SublimeText or the text editor of your choice.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Opinion&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;I don't like the use of the &lt;code&gt;.&lt;/code&gt; (dot) as part of variable names. To me, it normally means I am accessing properties of an object. In R, it has no such significance. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Links and handy resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Learn R interactively with &lt;a href="http://swirlstats.com/"&gt;Swirl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="[R"></category><category term="statistics"></category><category term="howto]"></category></entry><entry><title>PubMed - Did you know?</title><link href="/pubmed-did-you-know.html" rel="alternate"></link><published>2014-07-11T00:00:00+00:00</published><updated>2014-07-11T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-07-11:/pubmed-did-you-know.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;I have a nagging feeling that I have always been told that I should use Ovid Medline rather than PubMed if I am doing a &lt;em&gt;serious&lt;/em&gt; search. I have just spent 10 minutes on the interweb trying to work out why. As far as I can see, Ovid is just …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;I have a nagging feeling that I have always been told that I should use Ovid Medline rather than PubMed if I am doing a &lt;em&gt;serious&lt;/em&gt; search. I have just spent 10 minutes on the interweb trying to work out why. As far as I can see, Ovid is just a commercial front end for PubMed. But here's a list of tips, and pitfalls that I picked up along the way.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pubmed: you can't put a wildcard (&lt;code&gt;?&lt;/code&gt; or &lt;code&gt;*&lt;/code&gt;) in the middle of the word (whereas you can in ovid)&lt;/li&gt;
&lt;li&gt;ovid tag syntax (&lt;code&gt;pencillin.ti&lt;/code&gt;) differs from pubmed (&lt;code&gt;penicillin[ti]&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;</content><category term="[tips]"></category></entry><entry><title>PubMed search tags</title><link href="/pubmed-search-tags.html" rel="alternate"></link><published>2014-07-11T00:00:00+00:00</published><updated>2014-07-11T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-07-11:/pubmed-search-tags.html</id><summary type="html">&lt;hr&gt;
&lt;p&gt;I can never remember the tags that I need to help focus searches on &lt;a href="http://www.ncbi.nlm.nih.gov/pubmed/"&gt;PubMed&lt;/a&gt;. In particular, I didn't know it was possible to specify a date range via tags so for the last 5 years (2009--2014) you'd type &lt;code&gt;2009:2014[dp]&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;FIELD NAME&lt;/th&gt;
&lt;th align="left"&gt;&lt;code&gt;[TAG]&lt;/code&gt;&lt;/th&gt;
&lt;th align="left"&gt;SEARCHES&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Affiliation&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[AD]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;First listed …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;hr&gt;
&lt;p&gt;I can never remember the tags that I need to help focus searches on &lt;a href="http://www.ncbi.nlm.nih.gov/pubmed/"&gt;PubMed&lt;/a&gt;. In particular, I didn't know it was possible to specify a date range via tags so for the last 5 years (2009--2014) you'd type &lt;code&gt;2009:2014[dp]&lt;/code&gt;.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;FIELD NAME&lt;/th&gt;
&lt;th align="left"&gt;&lt;code&gt;[TAG]&lt;/code&gt;&lt;/th&gt;
&lt;th align="left"&gt;SEARCHES&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Affiliation&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[AD]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;First listed author's institutional affiliation and address&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Author&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[AU]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Author name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Corporate Name as Author&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[CN]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Corporate names as authors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Full Author Name&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[FAU]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Full author name (2002 onward, if available)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Issue&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[IP]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Journal issue number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Journal Title&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[TA]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Title of journal, journal title abbreviation, ISSN&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Language&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[LA]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Language of the article (not the abstract)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Last Author Name&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[LASTAU]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Last personal author in a citation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MeSH Major Topic&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[MAJR]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Main topic of an article&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MeSH Subheading&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[SH]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;MeSH Subheading&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;MeSH Terms&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[MH]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;MeSH Term&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pagination&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[PG]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;First page number of a journal article&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Personal Name as Subject&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[PS]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Person as the subject of an article, not as an author&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Publication Date&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[PD]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Date an article was published&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Publication Type&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[PT]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Format of an article (letter, clinical trial, etc) rather than content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Substance Name&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[NM]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Chemical and substance names discussed in an article&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Text Word&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[TW]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Textual fields of PubMed records&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Title&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[TI]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Article title&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Title or Abstract&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[TIAB]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Words in an article title or an abstract&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Volume&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[VI]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;Volume number of a particular journal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Year&lt;/td&gt;
&lt;td align="left"&gt;&lt;code&gt;[DP]&lt;/code&gt;&lt;/td&gt;
&lt;td align="left"&gt;The year when a journal article was published. Search a date range, type in &lt;code&gt;2000:2009[DP]&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Thanks to the &lt;a href="http://libguides.utoledo.edu/content.php?pid=83190&amp;amp;sid=621039"&gt;library&lt;/a&gt; at the University of Toledo for compiling this list.&lt;/p&gt;</content><category term="[tips"></category><category term="literature"></category><category term="search]"></category></entry><entry><title>Edit .bash_profile from the command line</title><link href="/edit-bash_profile-from-the-command-line.html" rel="alternate"></link><published>2014-06-20T00:00:00+00:00</published><updated>2014-06-20T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-06-20:/edit-bash_profile-from-the-command-line.html</id><summary type="html">&lt;p&gt;It's a pain to have to change my system preferences to show &lt;code&gt;.bash_profile&lt;/code&gt;, then navigate, and open it for editing.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;subl .bash_profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;does this directly from the command line.&lt;/p&gt;
&lt;p&gt;Make sure you have symlinked to your Sublime Text installtion first.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ln -s "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;It's a pain to have to change my system preferences to show &lt;code&gt;.bash_profile&lt;/code&gt;, then navigate, and open it for editing.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;subl .bash_profile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;does this directly from the command line.&lt;/p&gt;
&lt;p&gt;Make sure you have symlinked to your Sublime Text installtion first.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ln -s "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" ~/bin/subl&lt;/code&gt;&lt;/p&gt;</content><category term="terminal bash quicktip"></category></entry><entry><title>Using test to check on a file in the shell</title><link href="/using-test-to-check-on-a-file-in-the-shell.html" rel="alternate"></link><published>2014-06-03T00:00:00+00:00</published><updated>2014-06-03T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-06-03:/using-test-to-check-on-a-file-in-the-shell.html</id><summary type="html">&lt;p&gt;Do you need to check whether a file meets certain conditions? Then use the &lt;code&gt;test&lt;/code&gt; command in the bash shell.&lt;/p&gt;
&lt;p&gt;For example, I am using &lt;a href="http://www.noodlesoft.com/hazel.php"&gt;Hazel&lt;/a&gt; to clean up my desktop, but I have a bunch of directories symlinked there that I don't want it to touch. There is no …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Do you need to check whether a file meets certain conditions? Then use the &lt;code&gt;test&lt;/code&gt; command in the bash shell.&lt;/p&gt;
&lt;p&gt;For example, I am using &lt;a href="http://www.noodlesoft.com/hazel.php"&gt;Hazel&lt;/a&gt; to clean up my desktop, but I have a bunch of directories symlinked there that I don't want it to touch. There is no such test built into Hazel (it can check for aliases but not symlinks). So instead the following line will check &lt;code&gt;test -L myfile.ext&lt;/code&gt; and returns a &lt;code&gt;0&lt;/code&gt; in the variable &lt;code&gt;$?&lt;/code&gt; if true, and &lt;code&gt;1&lt;/code&gt; if false (just type &lt;code&gt;echo $?&lt;/code&gt; afterwards to see).&lt;/p&gt;
&lt;p&gt;The Hazel one-liner then becomes &lt;code&gt;test ! -L $1&lt;/code&gt; since Hazel uses &lt;code&gt;$1&lt;/code&gt; to refer to the file being examined. Note the exclamation mark &lt;code&gt;!&lt;/code&gt; that negates the test so it is checking that the file is &lt;em&gt;not&lt;/em&gt; a symlink.&lt;/p&gt;</content><category term="shell bash tips Hazel"></category></entry><entry><title>Git tips</title><link href="/git-tips.html" rel="alternate"></link><published>2014-05-21T00:00:00+00:00</published><updated>2014-05-21T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-05-21:/git-tips.html</id><summary type="html">&lt;p&gt;I have been using Git now for a couple of years, and have struggled to understand what it does. I get the basic concept  (that it keeps a record of the changes I make to my code) but it also sometimes seems to get in the way. I have read …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have been using Git now for a couple of years, and have struggled to understand what it does. I get the basic concept  (that it keeps a record of the changes I make to my code) but it also sometimes seems to get in the way. I have read &lt;a href="http://think-like-a-git.net/epic.html"&gt;Think like (a) Git&lt;/a&gt; and  &lt;a href="http://tomayko.com/writings/the-thing-about-git"&gt;The thing about git&lt;/a&gt; in the last couple of days and learned a few really useful things.&lt;/p&gt;
&lt;p&gt;In no particular order ...&lt;/p&gt;
&lt;h2&gt;Miscellaneous&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;the idea that git commits can be 'wasted' - you don't need to keep everything or worry about a commit being perfect. Commit if you feel like it.&lt;/li&gt;
&lt;li&gt;think of branches as save points (via &lt;a href="http://think-like-a-git.net/sections/experimenting-with-git/branches-as-savepoints.html"&gt;Think like (a) git&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Crafting a committ (or not)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;in contrast, you can also 'craft' a commit: this is the idea behind the staging area (or index), and is nicely covered in &lt;a href="http://tomayko.com/writings/the-thing-about-git"&gt;The Thing About Git&lt;/a&gt;. Here you can almost imagine writing your git commit message before you commit (i.e. I fixed problem X). Then simply add those files (or parts of files -- aka 'hunks'). Adding 'hunks' is the task of ...&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add --patch&lt;/code&gt; - this is genius. When you are preparing a commit then you don't need to commit an entire file. Running &lt;code&gt;git add --patch myfilename.here&lt;/code&gt; allows you to run through the diffs in the file and only stage those parts you wish to. You can also think of this as a bit of a backwards solution to the classic &lt;code&gt;git commit --ammend&lt;/code&gt; which allows you to add things you forgot to the previous commit.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Git patch options&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;y - stage this hunk
n - do not stage this hunk
a - stage this and all the remaining hunks in the file
d - do not stage this hunk nor any of the remaining hunks in the file
j - leave this hunk undecided, see next undecided hunk
J - leave this hunk undecided, see next hunk
k - leave this hunk undecided, see previous undecided hunk
K - leave this hunk undecided, see previous hunk
s - split the current hunk into smaller hunks
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Selectively applying changes from one branch to another&lt;/h2&gt;
&lt;p&gt;Common scenario: work in one branch would be useful in another but you don't want to merge the branches.&lt;/p&gt;
&lt;p&gt;If current branch is &lt;code&gt;this_branch&lt;/code&gt; and the branch with the changes you want to pull is called &lt;code&gt;that_branch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To pull across a specific commit:&lt;/p&gt;
&lt;p&gt;Git cherry pick will pull just a specific commit, but not necessarily a whole file.&lt;/p&gt;
&lt;p&gt;To pull across specific file(s):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git checkout that_branch path/to/myfile1 path/to/myfile2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;An &lt;a href="http://stackoverflow.com/a/22375842/992999"&gt;interactive patch&lt;/a&gt; from your current branch.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git checkout this_branch
git checkout -p that_branch
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;References&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jasonrudolph.com/blog/2009/02/25/git-tip-how-to-merge-specific-files-from-another-branch/"&gt;via Jason Rudolph&lt;/a&gt;
&lt;a href="http://stackoverflow.com/questions/449541/how-do-you-merge-selective-files-with-git-merge?rq=1"&gt;SO answer&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Using Git for writing&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git diff --word-diff=color&lt;/code&gt; ... wow! A way to inspect word by word changes in the file. Much better suited to using Git when writing. I should write more about this whole topic! In the meantime, also note&lt;/li&gt;
&lt;li&gt;type &lt;code&gt;-S&lt;/code&gt; while viewing the diff to wrap wrong lines and make everything more readable (via &lt;a href="http://stackoverflow.com/a/3107807/992999"&gt;someone45 at StackOverflow&lt;/a&gt; ... Thanks!).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Visualising your commits&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;a free git visualization tool called &lt;a href="https://github.com/pieter/gitx/wiki/"&gt;GitX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the command line version of the above is &lt;code&gt;git log --graph --decorate --oneline&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Finding and restoring something you deleted&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;`git log --diff-filter=D --summary`
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then restore it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;`git checkout &amp;lt;deleting_commit&amp;gt;^ -- &amp;lt;file_path&amp;gt;`
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(via &lt;a href="http://blog.kablamo.org/2013/12/08/git-restore/"&gt;kablamo&lt;/a&gt; and &lt;a href="http://stackoverflow.com/a/1113140/992999"&gt;Charles Bailey&lt;/a&gt; on stackoverflow)&lt;/p&gt;
&lt;p&gt;Things I still need to get my head around&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cherry picking&lt;/li&gt;
&lt;li&gt;the rebase command&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Rebase&lt;/h2&gt;
&lt;p&gt;Early notes: imagine a development branch, and a feature branch. While your working on the new feature, you also make (possibly) separate changes to the development branch. You don't want to destroy the feature (it's not done yet), but you want these recent changes on the development branch in your feature. Then rebase. 'Rebasing' refers to moving the point where your feature branch separated from the development branch forward in time. In fact, you move it forward to the 'capture' as many of the recent changes on development as you like.&lt;/p&gt;
&lt;p&gt;And if it turns out that there are conflicts between your feature branch and the development branch then you can either manually resolve them or do an 'interactive' rebase.&lt;/p&gt;
&lt;p&gt;A re-read of &lt;a href="http://think-like-a-git.net/epic.html"&gt;Think like (a) Git&lt;/a&gt; is in order!&lt;/p&gt;</content><category term="[code"></category><category term="git"></category><category term="tips]"></category></entry><entry><title>Blog set-up notes</title><link href="/blog-set-up-notes.html" rel="alternate"></link><published>2014-04-18T00:00:00+00:00</published><updated>2014-04-18T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-04-18:/blog-set-up-notes.html</id><summary type="html">&lt;p&gt;This blog is hosted by github. And despite their claims of this being a simple thing to do, I struggled. Things now seem to work, and I think I now have the hang of this. These are a series of notes to myself to remind me of the things I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This blog is hosted by github. And despite their claims of this being a simple thing to do, I struggled. Things now seem to work, and I think I now have the hang of this. These are a series of notes to myself to remind me of the things I have learned.&lt;/p&gt;
&lt;h2&gt;Set-up&lt;/h2&gt;
&lt;p&gt;Create your github repository as you are &lt;a href="http://pages.github.com/"&gt;told to&lt;/a&gt;, and make sure you name it properly. The magic is that appropriately named and formatted page now pushed to this repository will be 'auto-magically' converted into a properly formatted HTML page.&lt;/p&gt;
&lt;p&gt;This requires three elements.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A properly named page. &lt;code&gt;index.md&lt;/code&gt; is OK. And posts will need to be saved into the &lt;code&gt;.\_posts&lt;/code&gt; directory with &lt;code&gt;CCYY-MM-DD-title.md&lt;/code&gt; as their name. I found that &lt;code&gt;index.md&lt;/code&gt; didn't compile properly unless I had put the formatted date-time into it's YAML header (see below):&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;layout&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;default&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;title&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;A little knowledge&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;date&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;2014-03-26 09:00:00 UTC&lt;/span&gt;
&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A YAML header at the top of the file. This is a list of key:value pairs on separate lines bounded above and below by three dashes &lt;code&gt;---&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some templates and resources that will act as default layouts. I don't know where I copied mine from originally.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Other notes&lt;/h2&gt;
&lt;p&gt;I bought the site name at &lt;a href="www.hover.com"&gt;Hover&lt;/a&gt;. I had to then modify the A record at Hover so that it pointed to the Github IP address which I found &lt;a href="https://help.github.com/articles/my-custom-domain-isn-t-working"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For reference, they were &lt;code&gt;192.30.252.153&lt;/code&gt; and &lt;code&gt;192.30.252.154&lt;/code&gt;. The A record prefix &lt;code&gt;@&lt;/code&gt; points to the root of &lt;code&gt;alittleknowledge.net&lt;/code&gt;, and the &lt;code&gt;*&lt;/code&gt; prefix means any other subdomain will also be directed here (e.g. &lt;code&gt;www.alittleknowledge.net&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;In addition, I had to create a file named &lt;code&gt;CNAME&lt;/code&gt; at the root of my repository that contains just the domain name &lt;code&gt;alittleknowledge.net&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I pushed this all to the repository, and then added the &lt;code&gt;_site&lt;/code&gt; subdirectory to &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For local testing, if I navigate to the root folder and run &lt;code&gt;jekyll build&lt;/code&gt;, and then &lt;code&gt;jekyll serve&lt;/code&gt;, I can see my site at &lt;code&gt;localhost:4000&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Final thoughts&lt;/h2&gt;
&lt;p&gt;My guess is that all the 'real' HTML and code lives in the &lt;code&gt;_site&lt;/code&gt; directory, and it is this which is served by github. If I wanted to host the site elsewhere, then it would be the contents of this that I would be publishing after using jekyll on my local machine to build it.&lt;/p&gt;
&lt;h2&gt;Useful links&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;https://help.github.com/categories/20/articles&lt;/li&gt;
&lt;li&gt;http://pages.github.com/&lt;/li&gt;
&lt;li&gt;http://jekyllrb.com/&lt;/li&gt;
&lt;/ul&gt;</content><category term="[howto"></category><category term="jekyll"></category><category term="github"></category><category term="blogging]"></category></entry><entry><title>Getting Microsoft OneNote 2007 files into the Mac version of OneNote</title><link href="/getting-microsoft-onenote-2007-files-into-the-mac-version-of-onenote.html" rel="alternate"></link><published>2014-04-18T00:00:00+00:00</published><updated>2014-04-18T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-04-18:/getting-microsoft-onenote-2007-files-into-the-mac-version-of-onenote.html</id><summary type="html">&lt;p&gt;So I have just spent an entire evening extracting the data from my old Microsoft OneNote 2007 files. This was quite a task so I thought I would document my notes here. If I had had access to a Windows 8 machine then it would have been easier. As I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So I have just spent an entire evening extracting the data from my old Microsoft OneNote 2007 files. This was quite a task so I thought I would document my notes here. If I had had access to a Windows 8 machine then it would have been easier. As I understand it, OneNote 2013 on a Windows machine will simply open a OneNote 2007 file. That file can then be uploaded to Microsoft Onedrive, and then ‘hey presto’, I would have had access to it back on my Mac.&lt;/p&gt;
&lt;p&gt;Instead I have Windows XP and OneNote 2007 running inside a VMware Fusion (version 4) virtual machine. I could also have bought Windows 8 and upgraded VMware Fusion to version 6, and saved myself all the trouble. With an academic discount, and upgrade pricing, that would still have cost me £85. It would possibly have been worth it had I needed Windows for anything else, but for now I don’t.&lt;/p&gt;
&lt;p&gt;Instead, I found a copy of Office 2010 after a lot of googling. Most of these are illegal and come with keygens and cracks, but you can avoid problems if you just use it for the 29 day trial period. I installed this on the Windows XP virtual machine (after upgrading to Service Pack 3). I then opened my old OneNote 2007 folders one by one, and by clicking on the properties menu item, selected the option to upgrade them to the 2010 file format.&lt;/p&gt;
&lt;p&gt;These 2010 version files can now be opened and edited by &lt;a href="http://outline.ws/"&gt;Outline&lt;/a&gt; (a Mac version of OneNote). The 2007 files were read only.&lt;/p&gt;
&lt;p&gt;I could have stopped there, but Outline also connects to Onedrive so I copied the sections of the notebooks over to empty new notebooks I had created on Onedrive. These are now available to the Mac version of OneNote.&lt;/p&gt;
&lt;p&gt;About six hours of work. Not really sure that it wouldn’t have been better to have spent the £80.&lt;/p&gt;
&lt;h2&gt;Quick list of thing's I learnt&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Neither Outline nor Mac OneNote can be searched by Spotlight (as of 18 Apr 2014)&lt;/li&gt;
&lt;li&gt;Only the text content of a table is copied to the clipboard when working with Outline. Mac OneNote gets this right&lt;/li&gt;
&lt;li&gt;You can't rename OneNote notebooks in Outline (at least those that are saved on Onedrive)&lt;/li&gt;
&lt;/ul&gt;</content><category term="[howto]"></category></entry><entry><title>How to report frailty in a Cox Model?</title><link href="/how-to-report-frailty-in-a-cox-model.html" rel="alternate"></link><published>2014-03-27T00:00:00+00:00</published><updated>2014-03-27T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-03-27:/how-to-report-frailty-in-a-cox-model.html</id><summary type="html">&lt;p&gt;Struggling to report frailty in a survival model. Any ideas? I posted the &lt;a href="http://stats.stackexchange.com/questions/87672/the-right-way-to-report-random-effects-in-a-cox-survival-model"&gt;question&lt;/a&gt; to &lt;a href="http://stats.stackexchange.com/"&gt;Cross Validated&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Update 2015-12-11&lt;/h2&gt;
&lt;p&gt;There's an &lt;a href="http://stats.stackexchange.com/a/87679/7746"&gt;answer&lt;/a&gt; now for parametric models, but below in the end I used the Median Hazard Ratio&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt; (analogous to the Median Odds Ratio). &lt;/p&gt;
&lt;p&gt;Here's a little code snippet to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Struggling to report frailty in a survival model. Any ideas? I posted the &lt;a href="http://stats.stackexchange.com/questions/87672/the-right-way-to-report-random-effects-in-a-cox-survival-model"&gt;question&lt;/a&gt; to &lt;a href="http://stats.stackexchange.com/"&gt;Cross Validated&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Update 2015-12-11&lt;/h2&gt;
&lt;p&gt;There's an &lt;a href="http://stats.stackexchange.com/a/87679/7746"&gt;answer&lt;/a&gt; now for parametric models, but below in the end I used the Median Hazard Ratio&lt;sup id="fnref-1"&gt;&lt;a class="footnote-ref" href="#fn-1"&gt;1&lt;/a&gt;&lt;/sup&gt; (analogous to the Median Odds Ratio). &lt;/p&gt;
&lt;p&gt;Here's a little code snippet to estimate the median hazard ratio in Stata (after &lt;code&gt;stcox&lt;/code&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;stcox $indep_vars , nolog shared(group_var) noshow
di &amp;quot;Variance of random effects is e(theta) = &amp;quot; + `=e(theta)&amp;#39;
* So to estimate the MHR you now need to
local twoinvtheta2 = 2 / (e(theta)^2)
local mhr = exp(sqrt(2*e(theta))*invF(`twoinvtheta2&amp;#39;,`twoinvtheta2&amp;#39;,0.75))
di &amp;quot;MHR: `mhr&amp;#39;&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;References&lt;/h2&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn-1"&gt;
&lt;p&gt;Quantifying the Family Frailty Effect in Infant and Child Mortality by Using Median Hazard Ratio (MHR). 2010;43(1):15–27.&amp;#160;&lt;a class="footnote-backref" href="#fnref-1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="[statistics"></category><category term="questions"></category><category term="stata]"></category></entry><entry><title>Stop using bivariate correlations for variable selection</title><link href="/stop-using-bivariate-correlations-for-variable-selection.html" rel="alternate"></link><published>2014-03-26T00:00:00+00:00</published><updated>2014-03-26T00:00:00+00:00</updated><author><name></name></author><id>tag:None,2014-03-26:/stop-using-bivariate-correlations-for-variable-selection.html</id><summary type="html">&lt;p&gt;&lt;a href="http://jacobsimmering.com/2014/03/20/BivariateCorrelations/"&gt;Stop using bivariate correlations for variable selection&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://jacobsimmering.com/2014/03/20/BivariateCorrelations/"&gt;Stop using bivariate correlations for variable selection&lt;/a&gt;&lt;/p&gt;</content><category term="[statistics]"></category></entry></feed>